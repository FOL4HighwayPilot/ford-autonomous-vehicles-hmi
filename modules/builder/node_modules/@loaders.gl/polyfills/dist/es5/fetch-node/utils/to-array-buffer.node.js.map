{"version":3,"sources":["../../../../src/fetch-node/utils/to-array-buffer.node.js"],"names":["isArrayBuffer","x","ArrayBuffer","isBuffer","Buffer","toArrayBuffer","data","typedArray","Uint8Array","buffer","isView","text","uint8Array","TextEncoder","encode"],"mappings":";;;;;;;;;AAGA;;AAEA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,CAAC;AAAA,SAAIA,CAAC,IAAIA,CAAC,YAAYC,WAAtB;AAAA,CAAvB;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAF,CAAC;AAAA,SAAIA,CAAC,IAAIA,CAAC,YAAYG,MAAtB;AAAA,CAAlB;;AAEO,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAClC,MAAIN,aAAa,CAACM,IAAD,CAAjB,EAAyB;AACvB,WAAOA,IAAP;AACD;;AAGD,MAAIH,QAAQ,CAACG,IAAD,CAAZ,EAAoB;AAClB,QAAMC,UAAU,GAAG,IAAIC,UAAJ,CAAeF,IAAf,CAAnB;AACA,WAAOC,UAAU,CAACE,MAAlB;AACD;;AAGD,MAAIP,WAAW,CAACQ,MAAZ,CAAmBJ,IAAnB,CAAJ,EAA8B;AAC5B,WAAOA,IAAI,CAACG,MAAZ;AACD;;AAED,MAAI,OAAOH,IAAP,KAAgB,QAApB,EAA8B;AAC5B,QAAMK,IAAI,GAAGL,IAAb;AACA,QAAMM,UAAU,GAAG,IAAIC,WAAJ,GAAkBC,MAAlB,CAAyBH,IAAzB,CAAnB;AACA,WAAOC,UAAU,CAACH,MAAlB;AACD;;AAED,SAAO,wBAAO,KAAP,CAAP;AACD","sourcesContent":["// TODO: Duplicate of core\n\n/* global ArrayBuffer, Buffer, TextEncoder */\nimport assert from '../../utils/assert';\n\nconst isArrayBuffer = x => x && x instanceof ArrayBuffer;\nconst isBuffer = x => x && x instanceof Buffer;\n\nexport function toArrayBuffer(data) {\n  if (isArrayBuffer(data)) {\n    return data;\n  }\n\n  // TODO - per docs we should just be able to call buffer.buffer, but there are issues\n  if (isBuffer(data)) {\n    const typedArray = new Uint8Array(data);\n    return typedArray.buffer;\n  }\n\n  // Careful - Node Buffers will look like ArrayBuffers (keep after isBuffer)\n  if (ArrayBuffer.isView(data)) {\n    return data.buffer;\n  }\n\n  if (typeof data === 'string') {\n    const text = data;\n    const uint8Array = new TextEncoder().encode(text);\n    return uint8Array.buffer;\n  }\n\n  return assert(false);\n}\n"],"file":"to-array-buffer.node.js"}