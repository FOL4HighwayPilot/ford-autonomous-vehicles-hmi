{"version":3,"sources":["../../src/index.js"],"names":["global","TextEncoder","TextDecoder","isBrowser","base64","atob","btoa","HeadersNode","fetchNode","encodeImageNode","parseImageNode"],"mappings":";;;;;;AACA;;AAEA;;AACA;;AAEA;;AACA;;AAEA;;AACA;;AAMA,IAAI,EAAE,iBAAiBA,eAAnB,KAA8BC,qBAAlC,EAA+C;AAC7CD,kBAAO,aAAP,IAAwBC,qBAAxB;AACD;;AACD,IAAI,EAAE,iBAAiBD,eAAnB,KAA8BE,qBAAlC,EAA+C;AAC7CF,kBAAO,aAAP,IAAwBE,qBAAxB;AACD;;AAKD,IAAI,CAACC,kBAAD,IAAc,EAAE,UAAUH,eAAZ,CAAd,IAAqCI,MAAM,CAACC,IAAhD,EAAsD;AACpDL,kBAAO,MAAP,IAAiBI,MAAM,CAACC,IAAxB;AACD;;AACD,IAAI,CAACF,kBAAD,IAAc,EAAE,UAAUH,eAAZ,CAAd,IAAqCI,MAAM,CAACE,IAAhD,EAAsD;AACpDN,kBAAO,MAAP,IAAiBI,MAAM,CAACE,IAAxB;AACD;;AAMD,IAAI,CAACH,kBAAD,IAAc,EAAE,aAAaH,eAAf,CAAd,IAAwCO,mBAA5C,EAAyD;AACvDP,kBAAO,SAAP,IAAoBO,mBAApB;AACD;;AAED,IAAI,CAACJ,kBAAD,IAAc,EAAE,WAAWH,eAAb,CAAd,IAAsCQ,iBAA1C,EAAqD;AACnDR,kBAAO,OAAP,IAAkBQ,iBAAlB;AACD;;AAMD,IAAI,CAACL,kBAAD,IAAc,EAAE,sBAAsBH,eAAxB,CAAd,IAAiDS,4BAArD,EAAsE;AACpET,kBAAO,kBAAP,IAA6BS,4BAA7B;AACD;;AAED,IAAI,CAACN,kBAAD,IAAc,EAAE,qBAAqBH,eAAvB,CAAd,IAAgDU,0BAApD,EAAoE;AAClEV,kBAAO,iBAAP,IAA4BU,0BAA5B;AACD","sourcesContent":["/* eslint-disable dot-notation */\nimport {isBrowser, global} from './utils/globals';\n\nimport {TextDecoder, TextEncoder} from './text-encoding/encoding';\nimport * as base64 from './text-encoding/btoa.node';\n\nimport HeadersNode from './fetch-node/headers.node';\nimport fetchNode from './fetch-node/fetch.node';\n\nimport {encodeImageNode} from './images-node/encode-image.node';\nimport {parseImageNode} from './images-node/parse-image.node';\n\n// POLYFILLS: TextEncoder, TextDecoder\n// - Node: v11 introduces these classes, for lower versions we use these polyfills\n// - Browser: Edge, IE11 do not have these\n\nif (!('TextEncoder' in global) && TextEncoder) {\n  global['TextEncoder'] = TextEncoder;\n}\nif (!('TextDecoder' in global) && TextDecoder) {\n  global['TextDecoder'] = TextDecoder;\n}\n\n// POLYFILLS: btoa, atob\n// - Node: Yes\n// - Browser: No\nif (!isBrowser && !('atob' in global) && base64.atob) {\n  global['atob'] = base64.atob;\n}\nif (!isBrowser && !('btoa' in global) && base64.btoa) {\n  global['btoa'] = base64.btoa;\n}\n\n// POLYFILL: fetch\n// - Node: Yes\n// - Browser: No. For This polyfill is node only, IE11 etc, install external polyfill\n\nif (!isBrowser && !('Headers' in global) && HeadersNode) {\n  global['Headers'] = HeadersNode;\n}\n\nif (!isBrowser && !('fetch' in global) && fetchNode) {\n  global['fetch'] = fetchNode;\n}\n\n// NODE IMAGE FUNCTIONS:\n// These are not official polyfills but used by the @loaders.gl/images module if installed\n// TODO - is there an appropriate Image API we could polyfill using an adapter?\n\nif (!isBrowser && !('_encodeImageNode' in global) && encodeImageNode) {\n  global['_encodeImageNode'] = encodeImageNode;\n}\n\nif (!isBrowser && !('_parseImageNode' in global) && parseImageNode) {\n  global['_parseImageNode'] = parseImageNode;\n}\n"],"file":"index.js"}