{"version":3,"sources":["../../../src/images-node/parse-image.node.js"],"names":["parseImageNode","arrayBuffer","mimeType","options","getPixelsAsync","util","promisify","getPixels","buffer","Buffer","from","ndarray","width","shape","height","data"],"mappings":";;;;;;;;;;;;;AACA;;AACA;;SAEsBA,c;;;;;oFAAf,iBAA8BC,WAA9B,EAA2CC,QAA3C,EAAqDC,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAGCC,YAAAA,cAHD,GAGkBC,iBAAKC,SAAL,CAAeC,qBAAf,CAHlB;AAKCC,YAAAA,MALD,GAKUP,WAAW,YAAYQ,MAAvB,GAAgCR,WAAhC,GAA8CQ,MAAM,CAACC,IAAP,CAAYT,WAAZ,CALxD;AAAA;AAAA,mBAOiBG,cAAc,CAACI,MAAD,EAASN,QAAT,CAP/B;;AAAA;AAOCS,YAAAA,OAPD;AAAA,6CAQE;AACLC,cAAAA,KAAK,EAAED,OAAO,CAACE,KAAR,CAAc,CAAd,CADF;AAELC,cAAAA,MAAM,EAAEH,OAAO,CAACE,KAAR,CAAc,CAAd,CAFH;AAGLE,cAAAA,IAAI,EAAEJ,OAAO,CAACI;AAHT,aARF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["/* global Buffer */\nimport getPixels from 'get-pixels';\nimport util from 'util';\n\nexport async function parseImageNode(arrayBuffer, mimeType, options) {\n  // TODO - check if getPixels callback is asynchronous if provided with buffer input\n  // if not, parseImage can be a sync function\n  const getPixelsAsync = util.promisify(getPixels);\n\n  const buffer = arrayBuffer instanceof Buffer ? arrayBuffer : Buffer.from(arrayBuffer);\n\n  const ndarray = await getPixelsAsync(buffer, mimeType);\n  return {\n    width: ndarray.shape[0],\n    height: ndarray.shape[1],\n    data: ndarray.data\n  };\n}\n"],"file":"parse-image.node.js"}