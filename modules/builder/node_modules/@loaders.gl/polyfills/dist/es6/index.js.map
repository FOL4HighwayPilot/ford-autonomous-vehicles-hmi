{"version":3,"sources":["../../src/index.js"],"names":["isBrowser","global","TextDecoder","TextEncoder","base64","HeadersNode","fetchNode","encodeImageNode","parseImageNode","atob","btoa"],"mappings":"AACA,SAAQA,SAAR,EAAmBC,MAAnB,QAAgC,iBAAhC;AAEA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,0BAAvC;AACA,OAAO,KAAKC,MAAZ,MAAwB,2BAAxB;AAEA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,SAAQC,eAAR,QAA8B,iCAA9B;AACA,SAAQC,cAAR,QAA6B,gCAA7B;;AAMA,IAAI,EAAE,iBAAiBP,MAAnB,KAA8BE,WAAlC,EAA+C;AAC7CF,EAAAA,MAAM,CAAC,aAAD,CAAN,GAAwBE,WAAxB;AACD;;AACD,IAAI,EAAE,iBAAiBF,MAAnB,KAA8BC,WAAlC,EAA+C;AAC7CD,EAAAA,MAAM,CAAC,aAAD,CAAN,GAAwBC,WAAxB;AACD;;AAKD,IAAI,CAACF,SAAD,IAAc,EAAE,UAAUC,MAAZ,CAAd,IAAqCG,MAAM,CAACK,IAAhD,EAAsD;AACpDR,EAAAA,MAAM,CAAC,MAAD,CAAN,GAAiBG,MAAM,CAACK,IAAxB;AACD;;AACD,IAAI,CAACT,SAAD,IAAc,EAAE,UAAUC,MAAZ,CAAd,IAAqCG,MAAM,CAACM,IAAhD,EAAsD;AACpDT,EAAAA,MAAM,CAAC,MAAD,CAAN,GAAiBG,MAAM,CAACM,IAAxB;AACD;;AAMD,IAAI,CAACV,SAAD,IAAc,EAAE,aAAaC,MAAf,CAAd,IAAwCI,WAA5C,EAAyD;AACvDJ,EAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBI,WAApB;AACD;;AAED,IAAI,CAACL,SAAD,IAAc,EAAE,WAAWC,MAAb,CAAd,IAAsCK,SAA1C,EAAqD;AACnDL,EAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBK,SAAlB;AACD;;AAMD,IAAI,CAACN,SAAD,IAAc,EAAE,sBAAsBC,MAAxB,CAAd,IAAiDM,eAArD,EAAsE;AACpEN,EAAAA,MAAM,CAAC,kBAAD,CAAN,GAA6BM,eAA7B;AACD;;AAED,IAAI,CAACP,SAAD,IAAc,EAAE,qBAAqBC,MAAvB,CAAd,IAAgDO,cAApD,EAAoE;AAClEP,EAAAA,MAAM,CAAC,iBAAD,CAAN,GAA4BO,cAA5B;AACD","sourcesContent":["/* eslint-disable dot-notation */\nimport {isBrowser, global} from './utils/globals';\n\nimport {TextDecoder, TextEncoder} from './text-encoding/encoding';\nimport * as base64 from './text-encoding/btoa.node';\n\nimport HeadersNode from './fetch-node/headers.node';\nimport fetchNode from './fetch-node/fetch.node';\n\nimport {encodeImageNode} from './images-node/encode-image.node';\nimport {parseImageNode} from './images-node/parse-image.node';\n\n// POLYFILLS: TextEncoder, TextDecoder\n// - Node: v11 introduces these classes, for lower versions we use these polyfills\n// - Browser: Edge, IE11 do not have these\n\nif (!('TextEncoder' in global) && TextEncoder) {\n  global['TextEncoder'] = TextEncoder;\n}\nif (!('TextDecoder' in global) && TextDecoder) {\n  global['TextDecoder'] = TextDecoder;\n}\n\n// POLYFILLS: btoa, atob\n// - Node: Yes\n// - Browser: No\nif (!isBrowser && !('atob' in global) && base64.atob) {\n  global['atob'] = base64.atob;\n}\nif (!isBrowser && !('btoa' in global) && base64.btoa) {\n  global['btoa'] = base64.btoa;\n}\n\n// POLYFILL: fetch\n// - Node: Yes\n// - Browser: No. For This polyfill is node only, IE11 etc, install external polyfill\n\nif (!isBrowser && !('Headers' in global) && HeadersNode) {\n  global['Headers'] = HeadersNode;\n}\n\nif (!isBrowser && !('fetch' in global) && fetchNode) {\n  global['fetch'] = fetchNode;\n}\n\n// NODE IMAGE FUNCTIONS:\n// These are not official polyfills but used by the @loaders.gl/images module if installed\n// TODO - is there an appropriate Image API we could polyfill using an adapter?\n\nif (!isBrowser && !('_encodeImageNode' in global) && encodeImageNode) {\n  global['_encodeImageNode'] = encodeImageNode;\n}\n\nif (!isBrowser && !('_parseImageNode' in global) && parseImageNode) {\n  global['_parseImageNode'] = parseImageNode;\n}\n"],"file":"index.js"}