{"version":3,"sources":["../../../src/images-node/parse-image.node.js"],"names":["getPixels","util","parseImageNode","arrayBuffer","mimeType","options","getPixelsAsync","promisify","buffer","Buffer","from","ndarray","width","shape","height","data"],"mappings":";AACA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,gBAAsBC,cAAtB;AAAA;AAAA;;;sCAAO,WAA8BC,WAA9B,EAA2CC,QAA3C,EAAqDC,OAArD,EAA8D;AAGnE,UAAMC,cAAc,GAAGL,IAAI,CAACM,SAAL,CAAeP,SAAf,CAAvB;AAEA,UAAMQ,MAAM,GAAGL,WAAW,YAAYM,MAAvB,GAAgCN,WAAhC,GAA8CM,MAAM,CAACC,IAAP,CAAYP,WAAZ,CAA7D;AAEA,UAAMQ,OAAO,SAASL,cAAc,CAACE,MAAD,EAASJ,QAAT,CAApC;AACA,WAAO;AACLQ,MAAAA,KAAK,EAAED,OAAO,CAACE,KAAR,CAAc,CAAd,CADF;AAELC,MAAAA,MAAM,EAAEH,OAAO,CAACE,KAAR,CAAc,CAAd,CAFH;AAGLE,MAAAA,IAAI,EAAEJ,OAAO,CAACI;AAHT,KAAP;AAKD,G","sourcesContent":["/* global Buffer */\nimport getPixels from 'get-pixels';\nimport util from 'util';\n\nexport async function parseImageNode(arrayBuffer, mimeType, options) {\n  // TODO - check if getPixels callback is asynchronous if provided with buffer input\n  // if not, parseImage can be a sync function\n  const getPixelsAsync = util.promisify(getPixels);\n\n  const buffer = arrayBuffer instanceof Buffer ? arrayBuffer : Buffer.from(arrayBuffer);\n\n  const ndarray = await getPixelsAsync(buffer, mimeType);\n  return {\n    width: ndarray.shape[0],\n    height: ndarray.shape[1],\n    data: ndarray.data\n  };\n}\n"],"file":"parse-image.node.js"}