{"version":3,"sources":["../../../../src/writers/xviz-writer/xviz-binary-writer.js"],"names":["XVIZ_GLTF_EXTENSION","encodeBinaryXVIZ","xvizJson","options","gltfBuilder","GLTFBuilder","packedData","useAVSXVIZExtension","addExtension","nopack","addApplicationData","encodeAsGLB","writeBinaryXVIZtoFile","sink","directory","name","json","glbFileBuffer","writeSync","Buffer","from","flag"],"mappings":";;;;;;;;;AAkBA;;AACA;;AACA;;AAJO,IAAMA,mBAAmB,GAAG,UAA5B;;;AAMA,SAASC,gBAAT,CAA0BC,QAA1B,EAAoCC,OAApC,EAA6C;AAClD,MAAMC,WAAW,GAAG,IAAIC,iBAAJ,CAAgBF,OAAhB,CAApB;AAGA,MAAMG,UAAU,GAAG,oCAAeJ,QAAf,EAAyBE,WAAzB,EAAsC,IAAtC,EAA4CD,OAA5C,CAAnB;AAJkD,MAO3CI,mBAP2C,GAOpBJ,OAPoB,CAO3CI,mBAP2C;;AAQlD,MAAIA,mBAAmB,KAAK,IAA5B,EAAkC;AAChCH,IAAAA,WAAW,CAACI,YAAZ,CAAyBR,mBAAzB,EAA8CM,UAA9C,EAA0D;AAACG,MAAAA,MAAM,EAAE;AAAT,KAA1D;AACD,GAFD,MAEO;AACLL,IAAAA,WAAW,CAACM,kBAAZ,CAA+B,MAA/B,EAAuCJ,UAAvC,EAAmD;AAACG,MAAAA,MAAM,EAAE;AAAT,KAAnD;AACD;;AAED,SAAOL,WAAW,CAACO,WAAZ,CAAwBR,OAAxB,CAAP;AACD;;AAEM,SAASS,qBAAT,CAA+BC,IAA/B,EAAqCC,SAArC,EAAgDC,IAAhD,EAAsDC,IAAtD,EAA4Db,OAA5D,EAAqE;AAC1E,MAAMc,aAAa,GAAGhB,gBAAgB,CAACe,IAAD,EAAOb,OAAP,CAAtC;AAEAU,EAAAA,IAAI,CAACK,SAAL,CAAeJ,SAAf,YAA6BC,IAA7B,WAAyCI,MAAM,CAACC,IAAP,CAAYH,aAAZ,CAAzC,EAAqE;AAACI,IAAAA,IAAI,EAAE;AAAP,GAArE;AACA,SAAOJ,aAAP;AACD","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// TODO: remove this code, it duplicates io/src/writers/xviz-binary-writer.js\n\nexport const XVIZ_GLTF_EXTENSION = 'AVS_xviz'; // copied from @xviz/parser\n\nimport '@loaders.gl/polyfills';\nimport {GLTFBuilder} from '@loaders.gl/gltf';\nimport {packBinaryJson} from './xviz-pack-binary';\n\nexport function encodeBinaryXVIZ(xvizJson, options) {\n  const gltfBuilder = new GLTFBuilder(options);\n\n  // Pack appropriate large data elements (point clouds and images) in binary\n  const packedData = packBinaryJson(xvizJson, gltfBuilder, null, options);\n\n  // As permitted by glTF, we put all XVIZ data in a top-level subfield.\n  const {useAVSXVIZExtension} = options;\n  if (useAVSXVIZExtension === true) {\n    gltfBuilder.addExtension(XVIZ_GLTF_EXTENSION, packedData, {nopack: true});\n  } else {\n    gltfBuilder.addApplicationData('xviz', packedData, {nopack: true});\n  }\n\n  return gltfBuilder.encodeAsGLB(options);\n}\n\nexport function writeBinaryXVIZtoFile(sink, directory, name, json, options) {\n  const glbFileBuffer = encodeBinaryXVIZ(json, options);\n  /* global Buffer */\n  sink.writeSync(directory, `${name}.glb`, Buffer.from(glbFileBuffer), {flag: 'w'});\n  return glbFileBuffer;\n}\n"],"file":"xviz-binary-writer.js"}