{"version":3,"sources":["../../../src/parsers/parse-xviz-message.js"],"names":["parseXVIZMessageSync","postDeserialize","getWorkerFarm","initializeWorkerFarm","initializeWorkers","worker","maxConcurrency","capacity","parseXVIZMessage","message","onResult","onError","debug","workerFarm","onMessage","data","process"],"mappings":"AAcA,SAAQA,oBAAR,QAAmC,2BAAnC;AACA,SAAQC,eAAR,QAA8B,aAA9B;AACA,SAAQC,aAAR,EAAuBC,oBAAvB,QAAkD,iCAAlD;AAGA,OAAO,SAASC,iBAAT,CAA2B;AAACC,EAAAA,MAAD;AAASC,EAAAA,cAAc,GAAG,CAA1B;AAA6BC,EAAAA,QAAQ,GAAG;AAAxC,CAA3B,EAA0E;AAC/EJ,EAAAA,oBAAoB,CAAC;AAACE,IAAAA,MAAD;AAASC,IAAAA,cAAT;AAAyBC,IAAAA;AAAzB,GAAD,CAApB;AACD;AAED,OAAO,SAASC,gBAAT,CAA0B;AAC/BC,EAAAA,OAD+B;AAG/BC,EAAAA,QAH+B;AAI/BC,EAAAA,OAJ+B;AAK/BC,EAAAA,KAL+B;AAO/BP,EAAAA,MAAM,GAAG,KAPsB;AAQ/BC,EAAAA,cAAc,GAAG,CARc;AAS/BC,EAAAA,QAAQ,GAAG;AAToB,CAA1B,EAUJ;AACD,MAAIF,MAAJ,EAAY;AACV,QAAI,CAACH,aAAa,EAAlB,EAAsB;AACpBE,MAAAA,iBAAiB,CAAC;AAACC,QAAAA,MAAD;AAASC,QAAAA,cAAT;AAAyBC,QAAAA;AAAzB,OAAD,CAAjB;AACD;;AAED,UAAMM,UAAU,GAAGX,aAAa,EAAhC;;AAEA,QAAIU,KAAJ,EAAW;AACTC,MAAAA,UAAU,CAACD,KAAX,GAAmBA,KAAnB;AACD;;AAED,UAAME,SAAS,GAAGC,IAAI,IAAIL,QAAQ,CAACT,eAAe,CAACc,IAAD,CAAhB,CAAlC;;AACAF,IAAAA,UAAU,CAACG,OAAX,CAAmBP,OAAnB,EAA4BK,SAA5B,EAAuCH,OAAvC;AACD,GAbD,MAaO;AACLX,IAAAA,oBAAoB,CAACS,OAAD,EAAUC,QAAV,EAAoBC,OAApB,CAApB;AACD;AACF","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {parseXVIZMessageSync} from './parse-xviz-message-sync';\nimport {postDeserialize} from './serialize';\nimport {getWorkerFarm, initializeWorkerFarm} from './parse-xviz-message-workerfarm';\n\n// Public function for initializing workers\nexport function initializeWorkers({worker, maxConcurrency = 4, capacity = null}) {\n  initializeWorkerFarm({worker, maxConcurrency, capacity});\n}\n\nexport function parseXVIZMessage({\n  message,\n  // callbacks\n  onResult,\n  onError,\n  debug,\n  // worker options\n  worker = false,\n  maxConcurrency = 4,\n  capacity = null\n}) {\n  if (worker) {\n    if (!getWorkerFarm()) {\n      initializeWorkers({worker, maxConcurrency, capacity});\n    }\n\n    const workerFarm = getWorkerFarm();\n\n    if (debug) {\n      workerFarm.debug = debug;\n    }\n\n    const onMessage = data => onResult(postDeserialize(data));\n    workerFarm.process(message, onMessage, onError);\n  } else {\n    parseXVIZMessageSync(message, onResult, onError);\n  }\n}\n"],"file":"parse-xviz-message.js"}