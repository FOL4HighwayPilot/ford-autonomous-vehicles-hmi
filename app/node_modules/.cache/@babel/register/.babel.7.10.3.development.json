{
  "{\"sourceRoot\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin\",\"filename\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin/main.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin",
      "filename": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/main.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/main.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/main.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/",
        "sourceFileName": "main.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CarlaBag = void 0;\n\nvar _builder = require(\"@xviz/builder\");\n\nvar _server = require(\"@xviz/server\");\n\nvar _ros = require(\"@xviz/ros\");\n\nvar _imageConverter = require(\"./messages/image-converter\");\n\nvar _vehicleStatusConverter = require(\"./messages/vehicle-status-converter\");\n\nvar _odometryConverter = require(\"./messages/odometry-converter\");\n\nvar _waypointsConverter = require(\"./messages/waypoints-converter\");\n\nvar _trackletsConverter = require(\"./messages/tracklets-converter\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar CarlaBag = /*#__PURE__*/function (_ROSBag) {\n  _inherits(CarlaBag, _ROSBag);\n\n  var _super = _createSuper(CarlaBag);\n\n  function CarlaBag(bagPath, rosConfig) {\n    _classCallCheck(this, CarlaBag);\n\n    return _super.call(this, bagPath, rosConfig);\n  }\n\n  _createClass(CarlaBag, [{\n    key: \"getMetadata\",\n    value: function getMetadata(builder, ros2xviz) {\n      _get(_getPrototypeOf(CarlaBag.prototype), \"getMetadata\", this).call(this, builder, ros2xviz);\n\n      var ui = new _builder.XVIZUIBuilder({}); // Cameras\n\n      var SPECTATOR = \"/carla/ego_vehicle/camera/spectator_view\";\n      var FRONT = \"/carla/ego_vehicle/camera/front_view\";\n      var cam_panel = ui.panel({\n        name: 'Camera'\n      });\n      var video = ui.video({\n        cameras: [SPECTATOR, FRONT]\n      });\n      cam_panel.child(video); // Metric Charts\n\n      var chart_panel = ui.panel({\n        name: 'Charts'\n      });\n      var metricVel = ui.metric({\n        streams: ['/vehicle/velocity'],\n        title: 'Velocity',\n        description: 'The velocity of the vehicle'\n      });\n      var metricAcc = ui.metric({\n        streams: ['/vehicle/acceleration'],\n        title: 'Acceleration',\n        description: 'The acceleration of the vehicle'\n      });\n      chart_panel.child(metricVel);\n      chart_panel.child(metricAcc);\n      ui.child(cam_panel);\n      ui.child(chart_panel);\n      builder.ui(ui);\n    }\n  }]);\n\n  return CarlaBag;\n}(_ros.ROSBag); // Setup ROS Provider\n\n\nexports.CarlaBag = CarlaBag;\n\nfunction setupROSProvider(args) {\n  if (args.rosConfig) {\n    var converters = [_odometryConverter.SensorOdometry, _vehicleStatusConverter.SensorVelAcc, _imageConverter.SensorImage, _trackletsConverter.TrackletsConverter, _waypointsConverter.NavPathDecided, _waypointsConverter.NavPathFilteredMarker];\n    (0, _ros.registerROSBagProvider)(args.rosConfig, {\n      converters: converters,\n      BagClass: CarlaBag\n    });\n  }\n}\n\nfunction main() {\n  var yargs = require('yargs');\n\n  var args = yargs.alias('h', 'help');\n  args = (0, _ros.convertArgs)(args);\n  args = (0, _server.serverArgs)(args); // This will parse and execute the server command\n\n  args.middleware(setupROSProvider).parse();\n}\n\nmain();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiQ2FybGFCYWciLCJiYWdQYXRoIiwicm9zQ29uZmlnIiwiYnVpbGRlciIsInJvczJ4dml6IiwidWkiLCJYVklaVUlCdWlsZGVyIiwiU1BFQ1RBVE9SIiwiRlJPTlQiLCJjYW1fcGFuZWwiLCJwYW5lbCIsIm5hbWUiLCJ2aWRlbyIsImNhbWVyYXMiLCJjaGlsZCIsImNoYXJ0X3BhbmVsIiwibWV0cmljVmVsIiwibWV0cmljIiwic3RyZWFtcyIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJtZXRyaWNBY2MiLCJST1NCYWciLCJzZXR1cFJPU1Byb3ZpZGVyIiwiYXJncyIsImNvbnZlcnRlcnMiLCJTZW5zb3JPZG9tZXRyeSIsIlNlbnNvclZlbEFjYyIsIlNlbnNvckltYWdlIiwiVHJhY2tsZXRzQ29udmVydGVyIiwiTmF2UGF0aERlY2lkZWQiLCJOYXZQYXRoRmlsdGVyZWRNYXJrZXIiLCJCYWdDbGFzcyIsIm1haW4iLCJ5YXJncyIsInJlcXVpcmUiLCJhbGlhcyIsIm1pZGRsZXdhcmUiLCJwYXJzZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBRWFBLFE7Ozs7O0FBQ1gsb0JBQVlDLE9BQVosRUFBcUJDLFNBQXJCLEVBQWdDO0FBQUE7O0FBQUEsNkJBQ3hCRCxPQUR3QixFQUNmQyxTQURlO0FBRS9COzs7O2dDQUVXQyxPLEVBQVNDLFEsRUFBVTtBQUM3QixnRkFBa0JELE9BQWxCLEVBQTJCQyxRQUEzQjs7QUFFQSxVQUFNQyxFQUFFLEdBQUcsSUFBSUMsc0JBQUosQ0FBa0IsRUFBbEIsQ0FBWCxDQUg2QixDQUs3Qjs7QUFDQSxVQUFNQyxTQUFTLEdBQUcsMENBQWxCO0FBQ0EsVUFBTUMsS0FBSyxHQUFHLHNDQUFkO0FBRUEsVUFBTUMsU0FBUyxHQUFHSixFQUFFLENBQUNLLEtBQUgsQ0FBUztBQUN6QkMsUUFBQUEsSUFBSSxFQUFFO0FBRG1CLE9BQVQsQ0FBbEI7QUFJQSxVQUFNQyxLQUFLLEdBQUdQLEVBQUUsQ0FBQ08sS0FBSCxDQUFTO0FBQ3JCQyxRQUFBQSxPQUFPLEVBQUUsQ0FBQ04sU0FBRCxFQUFZQyxLQUFaO0FBRFksT0FBVCxDQUFkO0FBSUFDLE1BQUFBLFNBQVMsQ0FBQ0ssS0FBVixDQUFnQkYsS0FBaEIsRUFqQjZCLENBbUI3Qjs7QUFDQSxVQUFNRyxXQUFXLEdBQUdWLEVBQUUsQ0FBQ0ssS0FBSCxDQUFTO0FBQzNCQyxRQUFBQSxJQUFJLEVBQUU7QUFEcUIsT0FBVCxDQUFwQjtBQUlBLFVBQU1LLFNBQVMsR0FBR1gsRUFBRSxDQUFDWSxNQUFILENBQVU7QUFDMUJDLFFBQUFBLE9BQU8sRUFBRSxDQUFDLG1CQUFELENBRGlCO0FBRTFCQyxRQUFBQSxLQUFLLEVBQUUsVUFGbUI7QUFHMUJDLFFBQUFBLFdBQVcsRUFBRTtBQUhhLE9BQVYsQ0FBbEI7QUFNQSxVQUFNQyxTQUFTLEdBQUdoQixFQUFFLENBQUNZLE1BQUgsQ0FBVTtBQUMxQkMsUUFBQUEsT0FBTyxFQUFFLENBQUMsdUJBQUQsQ0FEaUI7QUFFMUJDLFFBQUFBLEtBQUssRUFBRSxjQUZtQjtBQUcxQkMsUUFBQUEsV0FBVyxFQUFFO0FBSGEsT0FBVixDQUFsQjtBQU1BTCxNQUFBQSxXQUFXLENBQUNELEtBQVosQ0FBa0JFLFNBQWxCO0FBQ0FELE1BQUFBLFdBQVcsQ0FBQ0QsS0FBWixDQUFrQk8sU0FBbEI7QUFHQWhCLE1BQUFBLEVBQUUsQ0FBQ1MsS0FBSCxDQUFTTCxTQUFUO0FBQ0FKLE1BQUFBLEVBQUUsQ0FBQ1MsS0FBSCxDQUFTQyxXQUFUO0FBRUFaLE1BQUFBLE9BQU8sQ0FBQ0UsRUFBUixDQUFXQSxFQUFYO0FBQ0Q7Ozs7RUFqRDJCaUIsVyxHQW9EOUI7Ozs7O0FBQ0EsU0FBU0MsZ0JBQVQsQ0FBMEJDLElBQTFCLEVBQWdDO0FBQzlCLE1BQUlBLElBQUksQ0FBQ3RCLFNBQVQsRUFBb0I7QUFDbEIsUUFBTXVCLFVBQVUsR0FBRyxDQUFDQyxpQ0FBRCxFQUFpQkMsb0NBQWpCLEVBQStCQywyQkFBL0IsRUFBNENDLHNDQUE1QyxFQUFnRUMsa0NBQWhFLEVBQWdGQyx5Q0FBaEYsQ0FBbkI7QUFDQSxxQ0FBdUJQLElBQUksQ0FBQ3RCLFNBQTVCLEVBQXVDO0FBQUN1QixNQUFBQSxVQUFVLEVBQVZBLFVBQUQ7QUFBYU8sTUFBQUEsUUFBUSxFQUFFaEM7QUFBdkIsS0FBdkM7QUFDRDtBQUNGOztBQUVELFNBQVNpQyxJQUFULEdBQWdCO0FBQ2QsTUFBTUMsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFFQSxNQUFJWCxJQUFJLEdBQUdVLEtBQUssQ0FBQ0UsS0FBTixDQUFZLEdBQVosRUFBaUIsTUFBakIsQ0FBWDtBQUVBWixFQUFBQSxJQUFJLEdBQUcsc0JBQVlBLElBQVosQ0FBUDtBQUNBQSxFQUFBQSxJQUFJLEdBQUcsd0JBQVdBLElBQVgsQ0FBUCxDQU5jLENBUWQ7O0FBQ0FBLEVBQUFBLElBQUksQ0FBQ2EsVUFBTCxDQUFnQmQsZ0JBQWhCLEVBQWtDZSxLQUFsQztBQUNEOztBQUVETCxJQUFJIiwic291cmNlUm9vdCI6Ii9ob21lL2VraW4vRGVza3RvcC94dml6L2V4YW1wbGVzL2NvbnZlcnRlcnMvcm9zLWVraW4vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtYVklaVUlCdWlsZGVyfSBmcm9tICdAeHZpei9idWlsZGVyJztcbmltcG9ydCB7c2VydmVyQXJnc30gZnJvbSAnQHh2aXovc2VydmVyJztcbmltcG9ydCB7Y29udmVydEFyZ3MsIFJPU0JhZywgcmVnaXN0ZXJST1NCYWdQcm92aWRlcn0gZnJvbSAnQHh2aXovcm9zJztcblxuaW1wb3J0IHtTZW5zb3JJbWFnZX0gZnJvbSAnLi9tZXNzYWdlcy9pbWFnZS1jb252ZXJ0ZXInO1xuaW1wb3J0IHtTZW5zb3JWZWxBY2N9IGZyb20gJy4vbWVzc2FnZXMvdmVoaWNsZS1zdGF0dXMtY29udmVydGVyJztcbmltcG9ydCB7U2Vuc29yT2RvbWV0cnl9IGZyb20gJy4vbWVzc2FnZXMvb2RvbWV0cnktY29udmVydGVyJztcbmltcG9ydCB7TmF2UGF0aEZvcndhcmQsIE5hdlBhdGhCYWNrd2FyZCwgTmF2UGF0aCwgTmF2UGF0aERlY2lkZWQsIE5hdlBhdGhGaWx0ZXJlZE1hcmtlcn0gZnJvbSAnLi9tZXNzYWdlcy93YXlwb2ludHMtY29udmVydGVyJztcbmltcG9ydCB7VHJhY2tsZXRzQ29udmVydGVyfSBmcm9tICcuL21lc3NhZ2VzL3RyYWNrbGV0cy1jb252ZXJ0ZXInXG5cbmV4cG9ydCBjbGFzcyBDYXJsYUJhZyBleHRlbmRzIFJPU0JhZyB7XG4gIGNvbnN0cnVjdG9yKGJhZ1BhdGgsIHJvc0NvbmZpZykge1xuICAgIHN1cGVyKGJhZ1BhdGgsIHJvc0NvbmZpZyk7XG4gIH1cblxuICBnZXRNZXRhZGF0YShidWlsZGVyLCByb3MyeHZpeikge1xuICAgIHN1cGVyLmdldE1ldGFkYXRhKGJ1aWxkZXIsIHJvczJ4dml6KTtcblxuICAgIGNvbnN0IHVpID0gbmV3IFhWSVpVSUJ1aWxkZXIoe30pO1xuXG4gICAgLy8gQ2FtZXJhc1xuICAgIGNvbnN0IFNQRUNUQVRPUiA9IFwiL2NhcmxhL2Vnb192ZWhpY2xlL2NhbWVyYS9zcGVjdGF0b3Jfdmlld1wiO1xuICAgIGNvbnN0IEZST05UID0gXCIvY2FybGEvZWdvX3ZlaGljbGUvY2FtZXJhL2Zyb250X3ZpZXdcIjtcblxuICAgIGNvbnN0IGNhbV9wYW5lbCA9IHVpLnBhbmVsKHtcbiAgICAgIG5hbWU6ICdDYW1lcmEnXG4gICAgfSk7XG5cbiAgICBjb25zdCB2aWRlbyA9IHVpLnZpZGVvKHtcbiAgICAgIGNhbWVyYXM6IFtTUEVDVEFUT1IsIEZST05UXVxuICAgIH0pO1xuXG4gICAgY2FtX3BhbmVsLmNoaWxkKHZpZGVvKTtcblxuICAgIC8vIE1ldHJpYyBDaGFydHNcbiAgICBjb25zdCBjaGFydF9wYW5lbCA9IHVpLnBhbmVsKHtcbiAgICAgIG5hbWU6ICdDaGFydHMnXG4gICAgfSk7XG5cbiAgICBjb25zdCBtZXRyaWNWZWwgPSB1aS5tZXRyaWMoe1xuICAgICAgc3RyZWFtczogWycvdmVoaWNsZS92ZWxvY2l0eSddLFxuICAgICAgdGl0bGU6ICdWZWxvY2l0eScsXG4gICAgICBkZXNjcmlwdGlvbjogJ1RoZSB2ZWxvY2l0eSBvZiB0aGUgdmVoaWNsZSdcbiAgICB9KTtcblxuICAgIGNvbnN0IG1ldHJpY0FjYyA9IHVpLm1ldHJpYyh7XG4gICAgICBzdHJlYW1zOiBbJy92ZWhpY2xlL2FjY2VsZXJhdGlvbiddLFxuICAgICAgdGl0bGU6ICdBY2NlbGVyYXRpb24nLFxuICAgICAgZGVzY3JpcHRpb246ICdUaGUgYWNjZWxlcmF0aW9uIG9mIHRoZSB2ZWhpY2xlJ1xuICAgIH0pO1xuXG4gICAgY2hhcnRfcGFuZWwuY2hpbGQobWV0cmljVmVsKTtcbiAgICBjaGFydF9wYW5lbC5jaGlsZChtZXRyaWNBY2MpO1xuXG5cbiAgICB1aS5jaGlsZChjYW1fcGFuZWwpO1xuICAgIHVpLmNoaWxkKGNoYXJ0X3BhbmVsKTtcblxuICAgIGJ1aWxkZXIudWkodWkpO1xuICB9XG59XG5cbi8vIFNldHVwIFJPUyBQcm92aWRlclxuZnVuY3Rpb24gc2V0dXBST1NQcm92aWRlcihhcmdzKSB7XG4gIGlmIChhcmdzLnJvc0NvbmZpZykge1xuICAgIGNvbnN0IGNvbnZlcnRlcnMgPSBbU2Vuc29yT2RvbWV0cnksIFNlbnNvclZlbEFjYywgU2Vuc29ySW1hZ2UsIFRyYWNrbGV0c0NvbnZlcnRlciwgTmF2UGF0aERlY2lkZWQsIE5hdlBhdGhGaWx0ZXJlZE1hcmtlcl07XG4gICAgcmVnaXN0ZXJST1NCYWdQcm92aWRlcihhcmdzLnJvc0NvbmZpZywge2NvbnZlcnRlcnMsIEJhZ0NsYXNzOiBDYXJsYUJhZ30pO1xuICB9XG59XG5cbmZ1bmN0aW9uIG1haW4oKSB7XG4gIGNvbnN0IHlhcmdzID0gcmVxdWlyZSgneWFyZ3MnKTtcblxuICBsZXQgYXJncyA9IHlhcmdzLmFsaWFzKCdoJywgJ2hlbHAnKTtcblxuICBhcmdzID0gY29udmVydEFyZ3MoYXJncyk7XG4gIGFyZ3MgPSBzZXJ2ZXJBcmdzKGFyZ3MpO1xuXG4gIC8vIFRoaXMgd2lsbCBwYXJzZSBhbmQgZXhlY3V0ZSB0aGUgc2VydmVyIGNvbW1hbmRcbiAgYXJncy5taWRkbGV3YXJlKHNldHVwUk9TUHJvdmlkZXIpLnBhcnNlKCk7XG59XG5cbm1haW4oKTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "main.js"
      ],
      "names": [
        "CarlaBag",
        "bagPath",
        "rosConfig",
        "builder",
        "ros2xviz",
        "ui",
        "XVIZUIBuilder",
        "SPECTATOR",
        "FRONT",
        "cam_panel",
        "panel",
        "name",
        "video",
        "cameras",
        "child",
        "chart_panel",
        "metricVel",
        "metric",
        "streams",
        "title",
        "description",
        "metricAcc",
        "ROSBag",
        "setupROSProvider",
        "args",
        "converters",
        "SensorOdometry",
        "SensorVelAcc",
        "SensorImage",
        "TrackletsConverter",
        "NavPathDecided",
        "NavPathFilteredMarker",
        "BagClass",
        "main",
        "yargs",
        "require",
        "alias",
        "middleware",
        "parse"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEaA,Q;;;;;AACX,oBAAYC,OAAZ,EAAqBC,SAArB,EAAgC;AAAA;;AAAA,6BACxBD,OADwB,EACfC,SADe;AAE/B;;;;gCAEWC,O,EAASC,Q,EAAU;AAC7B,gFAAkBD,OAAlB,EAA2BC,QAA3B;;AAEA,UAAMC,EAAE,GAAG,IAAIC,sBAAJ,CAAkB,EAAlB,CAAX,CAH6B,CAK7B;;AACA,UAAMC,SAAS,GAAG,0CAAlB;AACA,UAAMC,KAAK,GAAG,sCAAd;AAEA,UAAMC,SAAS,GAAGJ,EAAE,CAACK,KAAH,CAAS;AACzBC,QAAAA,IAAI,EAAE;AADmB,OAAT,CAAlB;AAIA,UAAMC,KAAK,GAAGP,EAAE,CAACO,KAAH,CAAS;AACrBC,QAAAA,OAAO,EAAE,CAACN,SAAD,EAAYC,KAAZ;AADY,OAAT,CAAd;AAIAC,MAAAA,SAAS,CAACK,KAAV,CAAgBF,KAAhB,EAjB6B,CAmB7B;;AACA,UAAMG,WAAW,GAAGV,EAAE,CAACK,KAAH,CAAS;AAC3BC,QAAAA,IAAI,EAAE;AADqB,OAAT,CAApB;AAIA,UAAMK,SAAS,GAAGX,EAAE,CAACY,MAAH,CAAU;AAC1BC,QAAAA,OAAO,EAAE,CAAC,mBAAD,CADiB;AAE1BC,QAAAA,KAAK,EAAE,UAFmB;AAG1BC,QAAAA,WAAW,EAAE;AAHa,OAAV,CAAlB;AAMA,UAAMC,SAAS,GAAGhB,EAAE,CAACY,MAAH,CAAU;AAC1BC,QAAAA,OAAO,EAAE,CAAC,uBAAD,CADiB;AAE1BC,QAAAA,KAAK,EAAE,cAFmB;AAG1BC,QAAAA,WAAW,EAAE;AAHa,OAAV,CAAlB;AAMAL,MAAAA,WAAW,CAACD,KAAZ,CAAkBE,SAAlB;AACAD,MAAAA,WAAW,CAACD,KAAZ,CAAkBO,SAAlB;AAGAhB,MAAAA,EAAE,CAACS,KAAH,CAASL,SAAT;AACAJ,MAAAA,EAAE,CAACS,KAAH,CAASC,WAAT;AAEAZ,MAAAA,OAAO,CAACE,EAAR,CAAWA,EAAX;AACD;;;;EAjD2BiB,W,GAoD9B;;;;;AACA,SAASC,gBAAT,CAA0BC,IAA1B,EAAgC;AAC9B,MAAIA,IAAI,CAACtB,SAAT,EAAoB;AAClB,QAAMuB,UAAU,GAAG,CAACC,iCAAD,EAAiBC,oCAAjB,EAA+BC,2BAA/B,EAA4CC,sCAA5C,EAAgEC,kCAAhE,EAAgFC,yCAAhF,CAAnB;AACA,qCAAuBP,IAAI,CAACtB,SAA5B,EAAuC;AAACuB,MAAAA,UAAU,EAAVA,UAAD;AAAaO,MAAAA,QAAQ,EAAEhC;AAAvB,KAAvC;AACD;AACF;;AAED,SAASiC,IAAT,GAAgB;AACd,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAIX,IAAI,GAAGU,KAAK,CAACE,KAAN,CAAY,GAAZ,EAAiB,MAAjB,CAAX;AAEAZ,EAAAA,IAAI,GAAG,sBAAYA,IAAZ,CAAP;AACAA,EAAAA,IAAI,GAAG,wBAAWA,IAAX,CAAP,CANc,CAQd;;AACAA,EAAAA,IAAI,CAACa,UAAL,CAAgBd,gBAAhB,EAAkCe,KAAlC;AACD;;AAEDL,IAAI",
      "sourceRoot": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/",
      "sourcesContent": [
        "import {XVIZUIBuilder} from '@xviz/builder';\nimport {serverArgs} from '@xviz/server';\nimport {convertArgs, ROSBag, registerROSBagProvider} from '@xviz/ros';\n\nimport {SensorImage} from './messages/image-converter';\nimport {SensorVelAcc} from './messages/vehicle-status-converter';\nimport {SensorOdometry} from './messages/odometry-converter';\nimport {NavPathForward, NavPathBackward, NavPath, NavPathDecided, NavPathFilteredMarker} from './messages/waypoints-converter';\nimport {TrackletsConverter} from './messages/tracklets-converter'\n\nexport class CarlaBag extends ROSBag {\n  constructor(bagPath, rosConfig) {\n    super(bagPath, rosConfig);\n  }\n\n  getMetadata(builder, ros2xviz) {\n    super.getMetadata(builder, ros2xviz);\n\n    const ui = new XVIZUIBuilder({});\n\n    // Cameras\n    const SPECTATOR = \"/carla/ego_vehicle/camera/spectator_view\";\n    const FRONT = \"/carla/ego_vehicle/camera/front_view\";\n\n    const cam_panel = ui.panel({\n      name: 'Camera'\n    });\n\n    const video = ui.video({\n      cameras: [SPECTATOR, FRONT]\n    });\n\n    cam_panel.child(video);\n\n    // Metric Charts\n    const chart_panel = ui.panel({\n      name: 'Charts'\n    });\n\n    const metricVel = ui.metric({\n      streams: ['/vehicle/velocity'],\n      title: 'Velocity',\n      description: 'The velocity of the vehicle'\n    });\n\n    const metricAcc = ui.metric({\n      streams: ['/vehicle/acceleration'],\n      title: 'Acceleration',\n      description: 'The acceleration of the vehicle'\n    });\n\n    chart_panel.child(metricVel);\n    chart_panel.child(metricAcc);\n\n\n    ui.child(cam_panel);\n    ui.child(chart_panel);\n\n    builder.ui(ui);\n  }\n}\n\n// Setup ROS Provider\nfunction setupROSProvider(args) {\n  if (args.rosConfig) {\n    const converters = [SensorOdometry, SensorVelAcc, SensorImage, TrackletsConverter, NavPathDecided, NavPathFilteredMarker];\n    registerROSBagProvider(args.rosConfig, {converters, BagClass: CarlaBag});\n  }\n}\n\nfunction main() {\n  const yargs = require('yargs');\n\n  let args = yargs.alias('h', 'help');\n\n  args = convertArgs(args);\n  args = serverArgs(args);\n\n  // This will parse and execute the server command\n  args.middleware(setupROSProvider).parse();\n}\n\nmain();"
      ]
    },
    "sourceType": "script",
    "mtime": 1594096785823
  },
  "{\"sourceRoot\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin\",\"filename\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/vehicle-status-converter.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin",
      "filename": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/vehicle-status-converter.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/vehicle-status-converter.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/vehicle-status-converter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/",
        "sourceFileName": "vehicle-status-converter.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SensorVelAcc = void 0;\n\nvar _ros = require(\"@xviz/ros\");\n\nvar _rosbag = require(\"rosbag\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar SensorVelAcc = /*#__PURE__*/function (_Converter) {\n  _inherits(SensorVelAcc, _Converter);\n\n  var _super = _createSuper(SensorVelAcc);\n\n  function SensorVelAcc(config) {\n    _classCallCheck(this, SensorVelAcc);\n\n    return _super.call(this, config);\n  }\n\n  _createClass(SensorVelAcc, [{\n    key: \"convertMessage\",\n    value: function () {\n      var _convertMessage = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(frame, xvizBuilder) {\n        var data, _data, timestamp, message, v, _message$acceleration, x, y, z, vel, accel;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = frame[this.topic];\n\n                if (data) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                _data = data[data.length - 1], timestamp = _data.timestamp, message = _data.message;\n                v = message.velocity, _message$acceleration = message.acceleration.linear, x = _message$acceleration.x, y = _message$acceleration.y, z = _message$acceleration.z; //console.log(v);\n\n                vel = v;\n                accel = Math.sqrt(x * x + y * y + z * z);\n                xvizBuilder.timeSeries('/vehicle/velocity').timestamp(_rosbag.TimeUtil.toDate(timestamp).getTime() / 1e3).value(vel);\n                xvizBuilder.timeSeries('/vehicle/acceleration').timestamp(_rosbag.TimeUtil.toDate(timestamp).getTime() / 1e3).value(accel);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function convertMessage(_x, _x2) {\n        return _convertMessage.apply(this, arguments);\n      }\n\n      return convertMessage;\n    }()\n  }, {\n    key: \"getMetadata\",\n    value: function getMetadata(xvizMetaBuilder) {\n      var xb = xvizMetaBuilder;\n      xb.stream('/vehicle/velocity').category('time_series').type('float').unit('m/s').stream('/vehicle/acceleration').category('time_series').type('float').unit('m/s^2');\n    }\n  }], [{\n    key: \"name\",\n    get: function get() {\n      return 'SensorVelAcc';\n    }\n  }, {\n    key: \"messageType\",\n    get: function get() {\n      return 'carla_msgs/CarlaEgoVehicleStatus';\n    }\n  }]);\n\n  return SensorVelAcc;\n}(_ros.Converter);\n\nexports.SensorVelAcc = SensorVelAcc;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlaGljbGUtc3RhdHVzLWNvbnZlcnRlci5qcyJdLCJuYW1lcyI6WyJTZW5zb3JWZWxBY2MiLCJjb25maWciLCJmcmFtZSIsInh2aXpCdWlsZGVyIiwiZGF0YSIsInRvcGljIiwibGVuZ3RoIiwidGltZXN0YW1wIiwibWVzc2FnZSIsInYiLCJ2ZWxvY2l0eSIsImFjY2VsZXJhdGlvbiIsImxpbmVhciIsIngiLCJ5IiwieiIsInZlbCIsImFjY2VsIiwiTWF0aCIsInNxcnQiLCJ0aW1lU2VyaWVzIiwiVGltZVV0aWwiLCJ0b0RhdGUiLCJnZXRUaW1lIiwidmFsdWUiLCJ4dml6TWV0YUJ1aWxkZXIiLCJ4YiIsInN0cmVhbSIsImNhdGVnb3J5IiwidHlwZSIsInVuaXQiLCJDb252ZXJ0ZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQUVhQSxZOzs7OztBQUNYLHdCQUFZQyxNQUFaLEVBQW9CO0FBQUE7O0FBQUEsNkJBQ1pBLE1BRFk7QUFFbkI7Ozs7O3FHQVVvQkMsSyxFQUFPQyxXOzs7Ozs7O0FBQ3BCQyxnQkFBQUEsSSxHQUFPRixLQUFLLENBQUMsS0FBS0csS0FBTixDOztvQkFDYkQsSTs7Ozs7Ozs7d0JBSXdCQSxJQUFJLENBQUNBLElBQUksQ0FBQ0UsTUFBTCxHQUFjLENBQWYsQyxFQUExQkMsUyxTQUFBQSxTLEVBQVdDLE8sU0FBQUEsTztBQUVOQyxnQkFBQUEsQyxHQUlSRCxPLENBSkZFLFEsMEJBSUVGLE8sQ0FIRkcsWSxDQUNFQyxNLEVBQVNDLEMseUJBQUFBLEMsRUFBR0MsQyx5QkFBQUEsQyxFQUFHQyxDLHlCQUFBQSxDLEVBR25COztBQUNNQyxnQkFBQUEsRyxHQUFNUCxDO0FBQ05RLGdCQUFBQSxLLEdBQVFDLElBQUksQ0FBQ0MsSUFBTCxDQUFVTixDQUFDLEdBQUdBLENBQUosR0FBUUMsQ0FBQyxHQUFHQSxDQUFaLEdBQWdCQyxDQUFDLEdBQUdBLENBQTlCLEM7QUFFZFosZ0JBQUFBLFdBQVcsQ0FDUmlCLFVBREgsQ0FDYyxtQkFEZCxFQUVHYixTQUZILENBRWFjLGlCQUFTQyxNQUFULENBQWdCZixTQUFoQixFQUEyQmdCLE9BQTNCLEtBQXVDLEdBRnBELEVBR0dDLEtBSEgsQ0FHU1IsR0FIVDtBQUtFYixnQkFBQUEsV0FBVyxDQUNWaUIsVUFERCxDQUNZLHVCQURaLEVBRUNiLFNBRkQsQ0FFV2MsaUJBQVNDLE1BQVQsQ0FBZ0JmLFNBQWhCLEVBQTJCZ0IsT0FBM0IsS0FBdUMsR0FGbEQsRUFHQ0MsS0FIRCxDQUdPUCxLQUhQOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Z0NBTVFRLGUsRUFBaUI7QUFDM0IsVUFBTUMsRUFBRSxHQUFHRCxlQUFYO0FBQ0FDLE1BQUFBLEVBQUUsQ0FBQ0MsTUFBSCxDQUFVLG1CQUFWLEVBQ0dDLFFBREgsQ0FDWSxhQURaLEVBRUdDLElBRkgsQ0FFUSxPQUZSLEVBR0dDLElBSEgsQ0FHUSxLQUhSLEVBS0dILE1BTEgsQ0FLVSx1QkFMVixFQU1HQyxRQU5ILENBTVksYUFOWixFQU9HQyxJQVBILENBT1EsT0FQUixFQVFHQyxJQVJILENBUVEsT0FSUjtBQVNEOzs7d0JBL0NpQjtBQUNoQixhQUFPLGNBQVA7QUFDRDs7O3dCQUV3QjtBQUN2QixhQUFPLGtDQUFQO0FBQ0Q7Ozs7RUFYK0JDLGMiLCJzb3VyY2VSb290IjoiL2hvbWUvZWtpbi9EZXNrdG9wL3h2aXovZXhhbXBsZXMvY29udmVydGVycy9yb3MtZWtpbi9tZXNzYWdlcy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbnZlcnRlcn0gZnJvbSAnQHh2aXovcm9zJztcbmltcG9ydCB7VGltZVV0aWx9IGZyb20gJ3Jvc2JhZyc7XG5cbmV4cG9ydCBjbGFzcyBTZW5zb3JWZWxBY2MgZXh0ZW5kcyBDb252ZXJ0ZXIge1xuICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcbiAgICBzdXBlcihjb25maWcpO1xuICB9XG5cbiAgc3RhdGljIGdldCBuYW1lKCkge1xuICAgIHJldHVybiAnU2Vuc29yVmVsQWNjJztcbiAgfVxuXG4gIHN0YXRpYyBnZXQgbWVzc2FnZVR5cGUoKSB7XG4gICAgcmV0dXJuICdjYXJsYV9tc2dzL0NhcmxhRWdvVmVoaWNsZVN0YXR1cyc7XG4gIH1cblxuICBhc3luYyBjb252ZXJ0TWVzc2FnZShmcmFtZSwgeHZpekJ1aWxkZXIpIHtcbiAgICBjb25zdCBkYXRhID0gZnJhbWVbdGhpcy50b3BpY107XG4gICAgaWYgKCFkYXRhKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3Qge3RpbWVzdGFtcCwgbWVzc2FnZX0gPSBkYXRhW2RhdGEubGVuZ3RoIC0gMV07XG4gICAgY29uc3Qge1xuICAgICAgdmVsb2NpdHk6IHYsXG4gICAgICBhY2NlbGVyYXRpb246IHtcbiAgICAgICAgbGluZWFyOiB7eCwgeSwgen1cbiAgICAgIH1cbiAgICB9ID0gbWVzc2FnZTtcbiAgICAvL2NvbnNvbGUubG9nKHYpO1xuICAgIGNvbnN0IHZlbCA9IHY7XG4gICAgY29uc3QgYWNjZWwgPSBNYXRoLnNxcnQoeCAqIHggKyB5ICogeSArIHogKiB6KTtcblxuICAgIHh2aXpCdWlsZGVyXG4gICAgICAudGltZVNlcmllcygnL3ZlaGljbGUvdmVsb2NpdHknKVxuICAgICAgLnRpbWVzdGFtcChUaW1lVXRpbC50b0RhdGUodGltZXN0YW1wKS5nZXRUaW1lKCkgLyAxZTMpXG4gICAgICAudmFsdWUodmVsKTtcblxuICAgICAgeHZpekJ1aWxkZXJcbiAgICAgIC50aW1lU2VyaWVzKCcvdmVoaWNsZS9hY2NlbGVyYXRpb24nKVxuICAgICAgLnRpbWVzdGFtcChUaW1lVXRpbC50b0RhdGUodGltZXN0YW1wKS5nZXRUaW1lKCkgLyAxZTMpXG4gICAgICAudmFsdWUoYWNjZWwpO1xuICB9XG5cbiAgZ2V0TWV0YWRhdGEoeHZpek1ldGFCdWlsZGVyKSB7XG4gICAgY29uc3QgeGIgPSB4dml6TWV0YUJ1aWxkZXI7XG4gICAgeGIuc3RyZWFtKCcvdmVoaWNsZS92ZWxvY2l0eScpXG4gICAgICAuY2F0ZWdvcnkoJ3RpbWVfc2VyaWVzJylcbiAgICAgIC50eXBlKCdmbG9hdCcpXG4gICAgICAudW5pdCgnbS9zJylcblxuICAgICAgLnN0cmVhbSgnL3ZlaGljbGUvYWNjZWxlcmF0aW9uJylcbiAgICAgIC5jYXRlZ29yeSgndGltZV9zZXJpZXMnKVxuICAgICAgLnR5cGUoJ2Zsb2F0JylcbiAgICAgIC51bml0KCdtL3NeMicpO1xuICB9XG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "vehicle-status-converter.js"
      ],
      "names": [
        "SensorVelAcc",
        "config",
        "frame",
        "xvizBuilder",
        "data",
        "topic",
        "length",
        "timestamp",
        "message",
        "v",
        "velocity",
        "acceleration",
        "linear",
        "x",
        "y",
        "z",
        "vel",
        "accel",
        "Math",
        "sqrt",
        "timeSeries",
        "TimeUtil",
        "toDate",
        "getTime",
        "value",
        "xvizMetaBuilder",
        "xb",
        "stream",
        "category",
        "type",
        "unit",
        "Converter"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEaA,Y;;;;;AACX,wBAAYC,MAAZ,EAAoB;AAAA;;AAAA,6BACZA,MADY;AAEnB;;;;;qGAUoBC,K,EAAOC,W;;;;;;;AACpBC,gBAAAA,I,GAAOF,KAAK,CAAC,KAAKG,KAAN,C;;oBACbD,I;;;;;;;;wBAIwBA,IAAI,CAACA,IAAI,CAACE,MAAL,GAAc,CAAf,C,EAA1BC,S,SAAAA,S,EAAWC,O,SAAAA,O;AAENC,gBAAAA,C,GAIRD,O,CAJFE,Q,0BAIEF,O,CAHFG,Y,CACEC,M,EAASC,C,yBAAAA,C,EAAGC,C,yBAAAA,C,EAAGC,C,yBAAAA,C,EAGnB;;AACMC,gBAAAA,G,GAAMP,C;AACNQ,gBAAAA,K,GAAQC,IAAI,CAACC,IAAL,CAAUN,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAZ,GAAgBC,CAAC,GAAGA,CAA9B,C;AAEdZ,gBAAAA,WAAW,CACRiB,UADH,CACc,mBADd,EAEGb,SAFH,CAEac,iBAASC,MAAT,CAAgBf,SAAhB,EAA2BgB,OAA3B,KAAuC,GAFpD,EAGGC,KAHH,CAGSR,GAHT;AAKEb,gBAAAA,WAAW,CACViB,UADD,CACY,uBADZ,EAECb,SAFD,CAEWc,iBAASC,MAAT,CAAgBf,SAAhB,EAA2BgB,OAA3B,KAAuC,GAFlD,EAGCC,KAHD,CAGOP,KAHP;;;;;;;;;;;;;;;;;;gCAMQQ,e,EAAiB;AAC3B,UAAMC,EAAE,GAAGD,eAAX;AACAC,MAAAA,EAAE,CAACC,MAAH,CAAU,mBAAV,EACGC,QADH,CACY,aADZ,EAEGC,IAFH,CAEQ,OAFR,EAGGC,IAHH,CAGQ,KAHR,EAKGH,MALH,CAKU,uBALV,EAMGC,QANH,CAMY,aANZ,EAOGC,IAPH,CAOQ,OAPR,EAQGC,IARH,CAQQ,OARR;AASD;;;wBA/CiB;AAChB,aAAO,cAAP;AACD;;;wBAEwB;AACvB,aAAO,kCAAP;AACD;;;;EAX+BC,c",
      "sourceRoot": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/",
      "sourcesContent": [
        "import {Converter} from '@xviz/ros';\nimport {TimeUtil} from 'rosbag';\n\nexport class SensorVelAcc extends Converter {\n  constructor(config) {\n    super(config);\n  }\n\n  static get name() {\n    return 'SensorVelAcc';\n  }\n\n  static get messageType() {\n    return 'carla_msgs/CarlaEgoVehicleStatus';\n  }\n\n  async convertMessage(frame, xvizBuilder) {\n    const data = frame[this.topic];\n    if (!data) {\n      return;\n    }\n\n    const {timestamp, message} = data[data.length - 1];\n    const {\n      velocity: v,\n      acceleration: {\n        linear: {x, y, z}\n      }\n    } = message;\n    //console.log(v);\n    const vel = v;\n    const accel = Math.sqrt(x * x + y * y + z * z);\n\n    xvizBuilder\n      .timeSeries('/vehicle/velocity')\n      .timestamp(TimeUtil.toDate(timestamp).getTime() / 1e3)\n      .value(vel);\n\n      xvizBuilder\n      .timeSeries('/vehicle/acceleration')\n      .timestamp(TimeUtil.toDate(timestamp).getTime() / 1e3)\n      .value(accel);\n  }\n\n  getMetadata(xvizMetaBuilder) {\n    const xb = xvizMetaBuilder;\n    xb.stream('/vehicle/velocity')\n      .category('time_series')\n      .type('float')\n      .unit('m/s')\n\n      .stream('/vehicle/acceleration')\n      .category('time_series')\n      .type('float')\n      .unit('m/s^2');\n  }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1593662007374
  },
  "{\"sourceRoot\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin\",\"filename\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/odometry-converter.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin",
      "filename": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/odometry-converter.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/odometry-converter.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/odometry-converter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/",
        "sourceFileName": "odometry-converter.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SensorOdometry = void 0;\n\nvar _ros = require(\"@xviz/ros\");\n\nvar _rosbag = require(\"rosbag\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar SensorOdometry = /*#__PURE__*/function (_Converter) {\n  _inherits(SensorOdometry, _Converter);\n\n  var _super = _createSuper(SensorOdometry);\n\n  function SensorOdometry(config) {\n    _classCallCheck(this, SensorOdometry);\n\n    return _super.call(this, config);\n  }\n\n  _createClass(SensorOdometry, [{\n    key: \"convertMessage\",\n    value: function () {\n      var _convertMessage = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(frame, xvizBuilder) {\n        var data, _data, timestamp, message, _message$pose$pose$po, x, y, z, pos, _message$pose$pose$or, w, roll, pitch, yaw;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = frame[this.topic];\n\n                if (data) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                _data = data[data.length - 1], timestamp = _data.timestamp, message = _data.message; // Read Position\n\n                _message$pose$pose$po = message.pose.pose.position, x = _message$pose$pose$po.x, y = _message$pose$pose$po.y, z = _message$pose$pose$po.z;\n                pos = [x, y, z]; //console.log(pos);\n                // Read Orientation\n\n                _message$pose$pose$or = message.pose.pose.orientation, x = _message$pose$pose$or.x, y = _message$pose$pose$or.y, z = _message$pose$pose$or.z, w = _message$pose$pose$or.w; // Convert orientation (from Quaternions to Roll-Pitch-Yaw)\n\n                roll = Math.atan2(2 * x * w + 2 * y * z, 1 - 2 * x * x - 2 * y * y);\n                pitch = Math.asin(2 * w * y + 2 * z * x);\n                yaw = Math.atan2(2 * z * w + 2 * x * y, 1 - 2 * y * y - 2 * z * z); //console.log([roll, pitch, yaw]);\n\n                xvizBuilder.pose('/vehicle_pose').timestamp(_rosbag.TimeUtil.toDate(timestamp).getTime() / 1e3).mapOrigin(29.005383, 41.043789, 40).orientation(roll, pitch, yaw).position(pos[0], pos[1], pos[2]);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function convertMessage(_x, _x2) {\n        return _convertMessage.apply(this, arguments);\n      }\n\n      return convertMessage;\n    }()\n  }, {\n    key: \"getMetadata\",\n    value: function getMetadata(xvizMetaBuilder) {\n      xvizMetaBuilder.stream('/vehicle_pose').category('pose');\n    }\n  }], [{\n    key: \"name\",\n    get: function get() {\n      return 'SensorOdometry';\n    }\n  }, {\n    key: \"messageType\",\n    get: function get() {\n      return 'nav_msgs/Odometry';\n    }\n  }]);\n\n  return SensorOdometry;\n}(_ros.Converter);\n\nexports.SensorOdometry = SensorOdometry;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9kb21ldHJ5LWNvbnZlcnRlci5qcyJdLCJuYW1lcyI6WyJTZW5zb3JPZG9tZXRyeSIsImNvbmZpZyIsImZyYW1lIiwieHZpekJ1aWxkZXIiLCJkYXRhIiwidG9waWMiLCJsZW5ndGgiLCJ0aW1lc3RhbXAiLCJtZXNzYWdlIiwicG9zZSIsInBvc2l0aW9uIiwieCIsInkiLCJ6IiwicG9zIiwib3JpZW50YXRpb24iLCJ3Iiwicm9sbCIsIk1hdGgiLCJhdGFuMiIsInBpdGNoIiwiYXNpbiIsInlhdyIsIlRpbWVVdGlsIiwidG9EYXRlIiwiZ2V0VGltZSIsIm1hcE9yaWdpbiIsInh2aXpNZXRhQnVpbGRlciIsInN0cmVhbSIsImNhdGVnb3J5IiwiQ29udmVydGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFFYUEsYzs7Ozs7QUFDWCwwQkFBWUMsTUFBWixFQUFvQjtBQUFBOztBQUFBLDZCQUNaQSxNQURZO0FBRW5COzs7OztxR0FVb0JDLEssRUFBT0MsVzs7Ozs7OztBQUNwQkMsZ0JBQUFBLEksR0FBT0YsS0FBSyxDQUFDLEtBQUtHLEtBQU4sQzs7b0JBQ2JELEk7Ozs7Ozs7O3dCQUl3QkEsSUFBSSxDQUFDQSxJQUFJLENBQUNFLE1BQUwsR0FBYyxDQUFmLEMsRUFBMUJDLFMsU0FBQUEsUyxFQUFXQyxPLFNBQUFBLE8sRUFFbEI7O3dDQU9JQSxPLENBTEZDLEksQ0FDRUEsSSxDQUNFQyxRLEVBQVdDLEMseUJBQUFBLEMsRUFBR0MsQyx5QkFBQUEsQyxFQUFHQyxDLHlCQUFBQSxDO0FBSWpCQyxnQkFBQUEsRyxHQUFNLENBQUNILENBQUQsRUFBSUMsQ0FBSixFQUFPQyxDQUFQLEMsRUFDWjtBQUVBOzt3Q0FPSUwsTyxDQUxGQyxJLENBQ0VBLEksQ0FDRU0sVyxFQUFjSixDLHlCQUFBQSxDLEVBQUdDLEMseUJBQUFBLEMsRUFBR0MsQyx5QkFBQUEsQyxFQUFHRyxDLHlCQUFBQSxDLEVBSzdCOztBQUNNQyxnQkFBQUEsSSxHQUFPQyxJQUFJLENBQUNDLEtBQUwsQ0FBVyxJQUFFUixDQUFGLEdBQUlLLENBQUosR0FBUSxJQUFFSixDQUFGLEdBQUlDLENBQXZCLEVBQTBCLElBQUksSUFBRUYsQ0FBRixHQUFJQSxDQUFSLEdBQVksSUFBRUMsQ0FBRixHQUFJQSxDQUExQyxDO0FBQ1BRLGdCQUFBQSxLLEdBQVNGLElBQUksQ0FBQ0csSUFBTCxDQUFVLElBQUVMLENBQUYsR0FBSUosQ0FBSixHQUFRLElBQUVDLENBQUYsR0FBSUYsQ0FBdEIsQztBQUNUVyxnQkFBQUEsRyxHQUFNSixJQUFJLENBQUNDLEtBQUwsQ0FBVyxJQUFFTixDQUFGLEdBQUlHLENBQUosR0FBUSxJQUFFTCxDQUFGLEdBQUlDLENBQXZCLEVBQTBCLElBQUksSUFBRUEsQ0FBRixHQUFJQSxDQUFSLEdBQVksSUFBRUMsQ0FBRixHQUFJQSxDQUExQyxDLEVBQ1o7O0FBRUFWLGdCQUFBQSxXQUFXLENBQ1JNLElBREgsQ0FDUSxlQURSLEVBRUdGLFNBRkgsQ0FFYWdCLGlCQUFTQyxNQUFULENBQWdCakIsU0FBaEIsRUFBMkJrQixPQUEzQixLQUF1QyxHQUZwRCxFQUdHQyxTQUhILENBR2EsU0FIYixFQUd3QixTQUh4QixFQUdtQyxFQUhuQyxFQUlHWCxXQUpILENBSWVFLElBSmYsRUFJcUJHLEtBSnJCLEVBSTRCRSxHQUo1QixFQUtHWixRQUxILENBS1lJLEdBQUcsQ0FBQyxDQUFELENBTGYsRUFLb0JBLEdBQUcsQ0FBQyxDQUFELENBTHZCLEVBSzRCQSxHQUFHLENBQUMsQ0FBRCxDQUwvQjs7Ozs7Ozs7Ozs7Ozs7Ozs7O2dDQVFVYSxlLEVBQWlCO0FBQzNCQSxNQUFBQSxlQUFlLENBQ1pDLE1BREgsQ0FDVSxlQURWLEVBRUdDLFFBRkgsQ0FFWSxNQUZaO0FBR0Q7Ozt3QkF0RGlCO0FBQ2hCLGFBQU8sZ0JBQVA7QUFDRDs7O3dCQUV3QjtBQUN2QixhQUFPLG1CQUFQO0FBQ0Q7Ozs7RUFYaUNDLGMiLCJzb3VyY2VSb290IjoiL2hvbWUvZWtpbi9EZXNrdG9wL3h2aXovZXhhbXBsZXMvY29udmVydGVycy9yb3MtZWtpbi9tZXNzYWdlcy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbnZlcnRlcn0gZnJvbSAnQHh2aXovcm9zJztcbmltcG9ydCB7VGltZVV0aWx9IGZyb20gJ3Jvc2JhZyc7XG5cbmV4cG9ydCBjbGFzcyBTZW5zb3JPZG9tZXRyeSBleHRlbmRzIENvbnZlcnRlciB7XG4gIGNvbnN0cnVjdG9yKGNvbmZpZykge1xuICAgIHN1cGVyKGNvbmZpZyk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IG5hbWUoKSB7XG4gICAgcmV0dXJuICdTZW5zb3JPZG9tZXRyeSc7XG4gIH1cblxuICBzdGF0aWMgZ2V0IG1lc3NhZ2VUeXBlKCkge1xuICAgIHJldHVybiAnbmF2X21zZ3MvT2RvbWV0cnknO1xuICB9XG5cbiAgYXN5bmMgY29udmVydE1lc3NhZ2UoZnJhbWUsIHh2aXpCdWlsZGVyKSB7XG4gICAgY29uc3QgZGF0YSA9IGZyYW1lW3RoaXMudG9waWNdO1xuICAgIGlmICghZGF0YSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IHt0aW1lc3RhbXAsIG1lc3NhZ2V9ID0gZGF0YVtkYXRhLmxlbmd0aCAtIDFdO1xuXG4gICAgLy8gUmVhZCBQb3NpdGlvblxuICAgIHZhciB7XG4gICAgICBwb3NlOiB7XG4gICAgICAgIHBvc2U6IHtcbiAgICAgICAgICBwb3NpdGlvbjoge3gsIHksIHp9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9ID0gbWVzc2FnZTtcbiAgICBjb25zdCBwb3MgPSBbeCwgeSwgel07XG4gICAgLy9jb25zb2xlLmxvZyhwb3MpO1xuXG4gICAgLy8gUmVhZCBPcmllbnRhdGlvblxuICAgIHZhciB7XG4gICAgICBwb3NlOiB7XG4gICAgICAgIHBvc2U6IHtcbiAgICAgICAgICBvcmllbnRhdGlvbjoge3gsIHksIHosIHd9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9ID0gbWVzc2FnZTtcblxuICAgIC8vIENvbnZlcnQgb3JpZW50YXRpb24gKGZyb20gUXVhdGVybmlvbnMgdG8gUm9sbC1QaXRjaC1ZYXcpXG4gICAgY29uc3Qgcm9sbCA9IE1hdGguYXRhbjIoMip4KncgKyAyKnkqeiwgMSAtIDIqeCp4IC0gMip5KnkpO1xuICAgIGNvbnN0IHBpdGNoID0gIE1hdGguYXNpbigyKncqeSArIDIqeip4KTtcbiAgICBjb25zdCB5YXcgPSBNYXRoLmF0YW4yKDIqeip3ICsgMip4KnksIDEgLSAyKnkqeSAtIDIqeip6KTtcbiAgICAvL2NvbnNvbGUubG9nKFtyb2xsLCBwaXRjaCwgeWF3XSk7XG5cbiAgICB4dml6QnVpbGRlclxuICAgICAgLnBvc2UoJy92ZWhpY2xlX3Bvc2UnKVxuICAgICAgLnRpbWVzdGFtcChUaW1lVXRpbC50b0RhdGUodGltZXN0YW1wKS5nZXRUaW1lKCkgLyAxZTMpXG4gICAgICAubWFwT3JpZ2luKDI5LjAwNTM4MywgNDEuMDQzNzg5LCA0MClcbiAgICAgIC5vcmllbnRhdGlvbihyb2xsLCBwaXRjaCwgeWF3KVxuICAgICAgLnBvc2l0aW9uKHBvc1swXSwgcG9zWzFdLCBwb3NbMl0pO1xuICB9XG5cbiAgZ2V0TWV0YWRhdGEoeHZpek1ldGFCdWlsZGVyKSB7XG4gICAgeHZpek1ldGFCdWlsZGVyXG4gICAgICAuc3RyZWFtKCcvdmVoaWNsZV9wb3NlJylcbiAgICAgIC5jYXRlZ29yeSgncG9zZScpO1xuICB9XG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "odometry-converter.js"
      ],
      "names": [
        "SensorOdometry",
        "config",
        "frame",
        "xvizBuilder",
        "data",
        "topic",
        "length",
        "timestamp",
        "message",
        "pose",
        "position",
        "x",
        "y",
        "z",
        "pos",
        "orientation",
        "w",
        "roll",
        "Math",
        "atan2",
        "pitch",
        "asin",
        "yaw",
        "TimeUtil",
        "toDate",
        "getTime",
        "mapOrigin",
        "xvizMetaBuilder",
        "stream",
        "category",
        "Converter"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEaA,c;;;;;AACX,0BAAYC,MAAZ,EAAoB;AAAA;;AAAA,6BACZA,MADY;AAEnB;;;;;qGAUoBC,K,EAAOC,W;;;;;;;AACpBC,gBAAAA,I,GAAOF,KAAK,CAAC,KAAKG,KAAN,C;;oBACbD,I;;;;;;;;wBAIwBA,IAAI,CAACA,IAAI,CAACE,MAAL,GAAc,CAAf,C,EAA1BC,S,SAAAA,S,EAAWC,O,SAAAA,O,EAElB;;wCAOIA,O,CALFC,I,CACEA,I,CACEC,Q,EAAWC,C,yBAAAA,C,EAAGC,C,yBAAAA,C,EAAGC,C,yBAAAA,C;AAIjBC,gBAAAA,G,GAAM,CAACH,CAAD,EAAIC,CAAJ,EAAOC,CAAP,C,EACZ;AAEA;;wCAOIL,O,CALFC,I,CACEA,I,CACEM,W,EAAcJ,C,yBAAAA,C,EAAGC,C,yBAAAA,C,EAAGC,C,yBAAAA,C,EAAGG,C,yBAAAA,C,EAK7B;;AACMC,gBAAAA,I,GAAOC,IAAI,CAACC,KAAL,CAAW,IAAER,CAAF,GAAIK,CAAJ,GAAQ,IAAEJ,CAAF,GAAIC,CAAvB,EAA0B,IAAI,IAAEF,CAAF,GAAIA,CAAR,GAAY,IAAEC,CAAF,GAAIA,CAA1C,C;AACPQ,gBAAAA,K,GAASF,IAAI,CAACG,IAAL,CAAU,IAAEL,CAAF,GAAIJ,CAAJ,GAAQ,IAAEC,CAAF,GAAIF,CAAtB,C;AACTW,gBAAAA,G,GAAMJ,IAAI,CAACC,KAAL,CAAW,IAAEN,CAAF,GAAIG,CAAJ,GAAQ,IAAEL,CAAF,GAAIC,CAAvB,EAA0B,IAAI,IAAEA,CAAF,GAAIA,CAAR,GAAY,IAAEC,CAAF,GAAIA,CAA1C,C,EACZ;;AAEAV,gBAAAA,WAAW,CACRM,IADH,CACQ,eADR,EAEGF,SAFH,CAEagB,iBAASC,MAAT,CAAgBjB,SAAhB,EAA2BkB,OAA3B,KAAuC,GAFpD,EAGGC,SAHH,CAGa,SAHb,EAGwB,SAHxB,EAGmC,EAHnC,EAIGX,WAJH,CAIeE,IAJf,EAIqBG,KAJrB,EAI4BE,GAJ5B,EAKGZ,QALH,CAKYI,GAAG,CAAC,CAAD,CALf,EAKoBA,GAAG,CAAC,CAAD,CALvB,EAK4BA,GAAG,CAAC,CAAD,CAL/B;;;;;;;;;;;;;;;;;;gCAQUa,e,EAAiB;AAC3BA,MAAAA,eAAe,CACZC,MADH,CACU,eADV,EAEGC,QAFH,CAEY,MAFZ;AAGD;;;wBAtDiB;AAChB,aAAO,gBAAP;AACD;;;wBAEwB;AACvB,aAAO,mBAAP;AACD;;;;EAXiCC,c",
      "sourceRoot": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/",
      "sourcesContent": [
        "import {Converter} from '@xviz/ros';\nimport {TimeUtil} from 'rosbag';\n\nexport class SensorOdometry extends Converter {\n  constructor(config) {\n    super(config);\n  }\n\n  static get name() {\n    return 'SensorOdometry';\n  }\n\n  static get messageType() {\n    return 'nav_msgs/Odometry';\n  }\n\n  async convertMessage(frame, xvizBuilder) {\n    const data = frame[this.topic];\n    if (!data) {\n      return;\n    }\n\n    const {timestamp, message} = data[data.length - 1];\n\n    // Read Position\n    var {\n      pose: {\n        pose: {\n          position: {x, y, z}\n        }\n      }\n    } = message;\n    const pos = [x, y, z];\n    //console.log(pos);\n\n    // Read Orientation\n    var {\n      pose: {\n        pose: {\n          orientation: {x, y, z, w}\n        }\n      }\n    } = message;\n\n    // Convert orientation (from Quaternions to Roll-Pitch-Yaw)\n    const roll = Math.atan2(2*x*w + 2*y*z, 1 - 2*x*x - 2*y*y);\n    const pitch =  Math.asin(2*w*y + 2*z*x);\n    const yaw = Math.atan2(2*z*w + 2*x*y, 1 - 2*y*y - 2*z*z);\n    //console.log([roll, pitch, yaw]);\n\n    xvizBuilder\n      .pose('/vehicle_pose')\n      .timestamp(TimeUtil.toDate(timestamp).getTime() / 1e3)\n      .mapOrigin(29.005383, 41.043789, 40)\n      .orientation(roll, pitch, yaw)\n      .position(pos[0], pos[1], pos[2]);\n  }\n\n  getMetadata(xvizMetaBuilder) {\n    xvizMetaBuilder\n      .stream('/vehicle_pose')\n      .category('pose');\n  }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1593669480440
  },
  "{\"sourceRoot\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin\",\"filename\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/waypoints-converter.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin",
      "filename": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/waypoints-converter.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/waypoints-converter.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/waypoints-converter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/",
        "sourceFileName": "waypoints-converter.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NavPathFilteredMarker = exports.NavPathDecided = exports.NavPath = exports.NavPathBackward = exports.NavPathForward = void 0;\n\nvar _ros = require(\"@xviz/ros\");\n\nvar _rosbag = require(\"rosbag\");\n\nvar _builder = require(\"@xviz/builder\");\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _visualizationMarkerarrayConverter = require(\"./visualization-markerarray-converter\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar NavPathForward = /*#__PURE__*/function (_Converter) {\n  _inherits(NavPathForward, _Converter);\n\n  var _super = _createSuper(NavPathForward);\n\n  function NavPathForward(config) {\n    _classCallCheck(this, NavPathForward);\n\n    return _super.call(this, config);\n  }\n\n  _createClass(NavPathForward, [{\n    key: \"convertMessage\",\n    value: function () {\n      var _convertMessage = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(frame, xvizBuilder) {\n        var data, _iterator, _step, d, polyline;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = frame[this.topic];\n\n                if (data) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                _iterator = _createForOfIteratorHelper(data);\n\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    d = _step.value;\n                    polyline = d.message.poses.map(function (p) {\n                      var position = p.pose.position;\n                      return [position.x, position.y, 0];\n                    });\n                    xvizBuilder.primitive('/vehicle/nav_path_forward').polyline(polyline);\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function convertMessage(_x, _x2) {\n        return _convertMessage.apply(this, arguments);\n      }\n\n      return convertMessage;\n    }()\n  }, {\n    key: \"getMetadata\",\n    value: function getMetadata(xvizMetaBuilder) {\n      xvizMetaBuilder.stream('/vehicle/nav_path_forward').coordinate('IDENTITY').category('primitive').type('polyline').streamStyle({\n        stroke_color: '#57AD57AA',\n        stroke_width: 1.4,\n        stroke_width_min_pixels: 1\n      });\n    }\n  }], [{\n    key: \"name\",\n    get: function get() {\n      return 'NavPathForward';\n    }\n  }, {\n    key: \"messageType\",\n    get: function get() {\n      return 'nav_msgs/Path';\n    }\n  }]);\n\n  return NavPathForward;\n}(_ros.Converter);\n/******************************************************************** */\n\n\nexports.NavPathForward = NavPathForward;\n\nvar NavPathBackward = /*#__PURE__*/function (_Converter2) {\n  _inherits(NavPathBackward, _Converter2);\n\n  var _super2 = _createSuper(NavPathBackward);\n\n  function NavPathBackward(config) {\n    _classCallCheck(this, NavPathBackward);\n\n    return _super2.call(this, config);\n  }\n\n  _createClass(NavPathBackward, [{\n    key: \"convertMessage\",\n    value: function () {\n      var _convertMessage2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(frame, xvizBuilder) {\n        var data, _iterator2, _step2, d, polyline;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                data = frame[this.topic];\n\n                if (data) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 3:\n                _iterator2 = _createForOfIteratorHelper(data);\n\n                try {\n                  for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                    d = _step2.value;\n                    polyline = d.message.poses.map(function (p) {\n                      var position = p.pose.position;\n                      return [position.x, position.y, 0];\n                    });\n                    xvizBuilder.primitive('/vehicle/nav_path_backward').polyline(polyline);\n                  }\n                } catch (err) {\n                  _iterator2.e(err);\n                } finally {\n                  _iterator2.f();\n                }\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function convertMessage(_x3, _x4) {\n        return _convertMessage2.apply(this, arguments);\n      }\n\n      return convertMessage;\n    }()\n  }, {\n    key: \"getMetadata\",\n    value: function getMetadata(xvizMetaBuilder) {\n      xvizMetaBuilder.stream('/vehicle/nav_path_backward').coordinate('IDENTITY').category('primitive').type('polyline').streamStyle({\n        stroke_color: '#B3052533',\n        stroke_width: 1.4,\n        stroke_width_min_pixels: 1\n      });\n    }\n  }], [{\n    key: \"name\",\n    get: function get() {\n      return 'NavPathBackward';\n    }\n  }, {\n    key: \"messageType\",\n    get: function get() {\n      return 'nav_msgs/Path';\n    }\n  }]);\n\n  return NavPathBackward;\n}(_ros.Converter);\n/******************************************************************** */\n\n\nexports.NavPathBackward = NavPathBackward;\n\nvar NavPath = /*#__PURE__*/function (_Converter3) {\n  _inherits(NavPath, _Converter3);\n\n  var _super3 = _createSuper(NavPath);\n\n  function NavPath(config) {\n    _classCallCheck(this, NavPath);\n\n    return _super3.call(this, config);\n  }\n\n  _createClass(NavPath, [{\n    key: \"convertMessage\",\n    value: function () {\n      var _convertMessage3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(frame, xvizBuilder) {\n        var data, _iterator3, _step3, d, polyline;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                data = frame[this.topic];\n\n                if (data) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 3:\n                _iterator3 = _createForOfIteratorHelper(data);\n\n                try {\n                  for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                    d = _step3.value;\n                    polyline = d.message.poses.map(function (p) {\n                      var position = p.pose.position;\n                      return [position.x, position.y, 0];\n                    });\n                    xvizBuilder.primitive('/vehicle/nav_path').polyline(polyline);\n                  }\n                } catch (err) {\n                  _iterator3.e(err);\n                } finally {\n                  _iterator3.f();\n                }\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function convertMessage(_x5, _x6) {\n        return _convertMessage3.apply(this, arguments);\n      }\n\n      return convertMessage;\n    }()\n  }, {\n    key: \"getMetadata\",\n    value: function getMetadata(xvizMetaBuilder) {\n      xvizMetaBuilder.stream('/vehicle/nav_path').coordinate('IDENTITY').category('primitive').type('polyline').streamStyle({\n        stroke_color: '#F3F6A2AA',\n        stroke_width: 1.4,\n        stroke_width_min_pixels: 1\n      });\n    }\n  }], [{\n    key: \"name\",\n    get: function get() {\n      return 'NavPath';\n    }\n  }, {\n    key: \"messageType\",\n    get: function get() {\n      return 'nav_msgs/Path';\n    }\n  }]);\n\n  return NavPath;\n}(_ros.Converter);\n/******************************************************************** */\n\n\nexports.NavPath = NavPath;\n\nvar NavPathDecided = /*#__PURE__*/function (_Converter4) {\n  _inherits(NavPathDecided, _Converter4);\n\n  var _super4 = _createSuper(NavPathDecided);\n\n  function NavPathDecided(config) {\n    _classCallCheck(this, NavPathDecided);\n\n    return _super4.call(this, config);\n  }\n\n  _createClass(NavPathDecided, [{\n    key: \"convertMessage\",\n    value: function () {\n      var _convertMessage4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(frame, xvizBuilder) {\n        var data, _iterator4, _step4, d, polyline;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                data = frame[this.topic];\n\n                if (data) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\");\n\n              case 3:\n                _iterator4 = _createForOfIteratorHelper(data);\n\n                try {\n                  for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                    d = _step4.value;\n                    polyline = d.message.poses.map(function (p) {\n                      var position = p.pose.position;\n                      return [position.x, position.y, 0];\n                    });\n                    xvizBuilder.primitive('/vehicle/nav_path_decided').polyline(polyline);\n                  }\n                } catch (err) {\n                  _iterator4.e(err);\n                } finally {\n                  _iterator4.f();\n                }\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function convertMessage(_x7, _x8) {\n        return _convertMessage4.apply(this, arguments);\n      }\n\n      return convertMessage;\n    }()\n  }, {\n    key: \"getMetadata\",\n    value: function getMetadata(xvizMetaBuilder) {\n      xvizMetaBuilder.stream('/vehicle/nav_path_decided').coordinate('IDENTITY').category('primitive').type('polyline').streamStyle({\n        stroke_color: '#57AD57AA',\n        stroke_width: 1.4,\n        stroke_width_min_pixels: 1\n      });\n    }\n  }], [{\n    key: \"name\",\n    get: function get() {\n      return 'NavPathDecided';\n    }\n  }, {\n    key: \"messageType\",\n    get: function get() {\n      return 'nav_msgs/Path';\n    }\n  }]);\n\n  return NavPathDecided;\n}(_ros.Converter);\n/******************************************************************** */\n\n\nexports.NavPathDecided = NavPathDecided;\n\nvar NavPathFilteredMarker = /*#__PURE__*/function (_VisualizationMarkerA) {\n  _inherits(NavPathFilteredMarker, _VisualizationMarkerA);\n\n  var _super5 = _createSuper(NavPathFilteredMarker);\n\n  function NavPathFilteredMarker(config) {\n    _classCallCheck(this, NavPathFilteredMarker);\n\n    return _super5.call(this, config);\n  }\n\n  _createClass(NavPathFilteredMarker, [{\n    key: \"convertMessage\",\n    value: function () {\n      var _convertMessage5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(frame, xvizBuilder) {\n        var _this = this;\n\n        var messages, markers;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                messages = frame[this.topic];\n\n                if (messages) {\n                  markers = _lodash[\"default\"].map(messages, 'message');\n                  markers.forEach(function (marker) {\n                    return _this._processMarker(marker);\n                  });\n                }\n\n                this.writeMarkers(xvizBuilder);\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function convertMessage(_x9, _x10) {\n        return _convertMessage5.apply(this, arguments);\n      }\n\n      return convertMessage;\n    }()\n  }], [{\n    key: \"name\",\n    get: function get() {\n      return 'NavPathFilteredMarker';\n    }\n  }, {\n    key: \"messageType\",\n    get: function get() {\n      return 'visualization_msgs/Marker';\n    }\n  }]);\n\n  return NavPathFilteredMarker;\n}(_visualizationMarkerarrayConverter.VisualizationMarkerArray);\n\nexports.NavPathFilteredMarker = NavPathFilteredMarker;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "waypoints-converter.js"
      ],
      "names": [
        "NavPathForward",
        "config",
        "frame",
        "xvizBuilder",
        "data",
        "topic",
        "d",
        "polyline",
        "message",
        "poses",
        "map",
        "p",
        "position",
        "pose",
        "x",
        "y",
        "primitive",
        "xvizMetaBuilder",
        "stream",
        "coordinate",
        "category",
        "type",
        "streamStyle",
        "stroke_color",
        "stroke_width",
        "stroke_width_min_pixels",
        "Converter",
        "NavPathBackward",
        "NavPath",
        "NavPathDecided",
        "NavPathFilteredMarker",
        "messages",
        "markers",
        "_",
        "forEach",
        "marker",
        "_processMarker",
        "writeMarkers",
        "VisualizationMarkerArray"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEaA,c;;;;;AACX,0BAAYC,MAAZ,EAAoB;AAAA;;AAAA,6BACZA,MADY;AAEnB;;;;;qGAUoBC,K,EAAOC,W;;;;;;;AACpBC,gBAAAA,I,GAAOF,KAAK,CAAC,KAAKG,KAAN,C;;oBACbD,I;;;;;;;;uDAIWA,I;;;AAAhB,sEAAsB;AAAXE,oBAAAA,CAAW;AACZC,oBAAAA,QADY,GACDD,CAAC,CAACE,OAAF,CAAUC,KAAV,CAAgBC,GAAhB,CAAoB,UAAAC,CAAC,EAAI;AAAA,0BACjCC,QADiC,GACrBD,CAAC,CAACE,IADmB,CACjCD,QADiC;AAExC,6BAAO,CAACA,QAAQ,CAACE,CAAV,EAAaF,QAAQ,CAACG,CAAtB,EAAyB,CAAzB,CAAP;AACD,qBAHgB,CADC;AAMlBZ,oBAAAA,WAAW,CAACa,SAAZ,CAAsB,2BAAtB,EAAmDT,QAAnD,CAA4DA,QAA5D;AACH;;;;;;;;;;;;;;;;;;;;;;;gCAGSU,e,EAAiB;AAC3BA,MAAAA,eAAe,CACVC,MADL,CACY,2BADZ,EAEKC,UAFL,CAEgB,UAFhB,EAGKC,QAHL,CAGc,WAHd,EAIKC,IAJL,CAIU,UAJV,EAKKC,WALL,CAKiB;AACTC,QAAAA,YAAY,EAAE,WADL;AAETC,QAAAA,YAAY,EAAE,GAFL;AAGTC,QAAAA,uBAAuB,EAAE;AAHhB,OALjB;AAUD;;;wBAnCiB;AAChB,aAAO,gBAAP;AACD;;;wBAEwB;AACvB,aAAO,eAAP;AACD;;;;EAXiCC,c;AA2CpC;;;;;IAEaC,e;;;;;AACX,2BAAY1B,MAAZ,EAAoB;AAAA;;AAAA,8BACZA,MADY;AAEnB;;;;;uGAUoBC,K,EAAOC,W;;;;;;;AACpBC,gBAAAA,I,GAAOF,KAAK,CAAC,KAAKG,KAAN,C;;oBACbD,I;;;;;;;;wDAIWA,I;;;AAAhB,yEAAsB;AAAXE,oBAAAA,CAAW;AACZC,oBAAAA,QADY,GACDD,CAAC,CAACE,OAAF,CAAUC,KAAV,CAAgBC,GAAhB,CAAoB,UAAAC,CAAC,EAAI;AAAA,0BACjCC,QADiC,GACrBD,CAAC,CAACE,IADmB,CACjCD,QADiC;AAExC,6BAAO,CAACA,QAAQ,CAACE,CAAV,EAAaF,QAAQ,CAACG,CAAtB,EAAyB,CAAzB,CAAP;AACD,qBAHgB,CADC;AAMlBZ,oBAAAA,WAAW,CAACa,SAAZ,CAAsB,4BAAtB,EAAoDT,QAApD,CAA6DA,QAA7D;AACH;;;;;;;;;;;;;;;;;;;;;;;gCAGSU,e,EAAiB;AAC3BA,MAAAA,eAAe,CACVC,MADL,CACY,4BADZ,EAEKC,UAFL,CAEgB,UAFhB,EAGKC,QAHL,CAGc,WAHd,EAIKC,IAJL,CAIU,UAJV,EAKKC,WALL,CAKiB;AACTC,QAAAA,YAAY,EAAE,WADL;AAETC,QAAAA,YAAY,EAAE,GAFL;AAGTC,QAAAA,uBAAuB,EAAE;AAHhB,OALjB;AAUD;;;wBAnCiB;AAChB,aAAO,iBAAP;AACD;;;wBAEwB;AACvB,aAAO,eAAP;AACD;;;;EAXkCC,c;AA2CrC;;;;;IAEaE,O;;;;;AACX,mBAAY3B,MAAZ,EAAoB;AAAA;;AAAA,8BACZA,MADY;AAEnB;;;;;uGAUoBC,K,EAAOC,W;;;;;;;AACpBC,gBAAAA,I,GAAOF,KAAK,CAAC,KAAKG,KAAN,C;;oBACbD,I;;;;;;;;wDAIWA,I;;;AAAhB,yEAAsB;AAAXE,oBAAAA,CAAW;AACZC,oBAAAA,QADY,GACDD,CAAC,CAACE,OAAF,CAAUC,KAAV,CAAgBC,GAAhB,CAAoB,UAAAC,CAAC,EAAI;AAAA,0BACjCC,QADiC,GACrBD,CAAC,CAACE,IADmB,CACjCD,QADiC;AAExC,6BAAO,CAACA,QAAQ,CAACE,CAAV,EAAaF,QAAQ,CAACG,CAAtB,EAAyB,CAAzB,CAAP;AACD,qBAHgB,CADC;AAMlBZ,oBAAAA,WAAW,CAACa,SAAZ,CAAsB,mBAAtB,EAA2CT,QAA3C,CAAoDA,QAApD;AACH;;;;;;;;;;;;;;;;;;;;;;;gCAGSU,e,EAAiB;AAC3BA,MAAAA,eAAe,CACVC,MADL,CACY,mBADZ,EAEKC,UAFL,CAEgB,UAFhB,EAGKC,QAHL,CAGc,WAHd,EAIKC,IAJL,CAIU,UAJV,EAKKC,WALL,CAKiB;AACTC,QAAAA,YAAY,EAAE,WADL;AAETC,QAAAA,YAAY,EAAE,GAFL;AAGTC,QAAAA,uBAAuB,EAAE;AAHhB,OALjB;AAUD;;;wBAnCiB;AAChB,aAAO,SAAP;AACD;;;wBAEwB;AACvB,aAAO,eAAP;AACD;;;;EAX0BC,c;AA2C7B;;;;;IAEaG,c;;;;;AACX,0BAAY5B,MAAZ,EAAoB;AAAA;;AAAA,8BACZA,MADY;AAEnB;;;;;uGAUoBC,K,EAAOC,W;;;;;;;AACpBC,gBAAAA,I,GAAOF,KAAK,CAAC,KAAKG,KAAN,C;;oBACbD,I;;;;;;;;wDAIWA,I;;;AAAhB,yEAAsB;AAAXE,oBAAAA,CAAW;AACZC,oBAAAA,QADY,GACDD,CAAC,CAACE,OAAF,CAAUC,KAAV,CAAgBC,GAAhB,CAAoB,UAAAC,CAAC,EAAI;AAAA,0BACjCC,QADiC,GACrBD,CAAC,CAACE,IADmB,CACjCD,QADiC;AAExC,6BAAO,CAACA,QAAQ,CAACE,CAAV,EAAaF,QAAQ,CAACG,CAAtB,EAAyB,CAAzB,CAAP;AACD,qBAHgB,CADC;AAMlBZ,oBAAAA,WAAW,CAACa,SAAZ,CAAsB,2BAAtB,EAAmDT,QAAnD,CAA4DA,QAA5D;AACH;;;;;;;;;;;;;;;;;;;;;;;gCAGSU,e,EAAiB;AAC3BA,MAAAA,eAAe,CACVC,MADL,CACY,2BADZ,EAEKC,UAFL,CAEgB,UAFhB,EAGKC,QAHL,CAGc,WAHd,EAIKC,IAJL,CAIU,UAJV,EAKKC,WALL,CAKiB;AACTC,QAAAA,YAAY,EAAE,WADL;AAETC,QAAAA,YAAY,EAAE,GAFL;AAGTC,QAAAA,uBAAuB,EAAE;AAHhB,OALjB;AAUD;;;wBAnCiB;AAChB,aAAO,gBAAP;AACD;;;wBAEwB;AACvB,aAAO,eAAP;AACD;;;;EAXiCC,c;AA2CpC;;;;;IAEaI,qB;;;;;AACX,iCAAY7B,MAAZ,EAAoB;AAAA;;AAAA,8BACZA,MADY;AAEnB;;;;;uGAUoBC,K,EAAOC,W;;;;;;;;AACpB4B,gBAAAA,Q,GAAW7B,KAAK,CAAC,KAAKG,KAAN,C;;AACtB,oBAAI0B,QAAJ,EAAc;AACNC,kBAAAA,OADM,GACIC,mBAAEvB,GAAF,CAAMqB,QAAN,EAAgB,SAAhB,CADJ;AAEZC,kBAAAA,OAAO,CAACE,OAAR,CAAgB,UAAAC,MAAM;AAAA,2BAAI,KAAI,CAACC,cAAL,CAAoBD,MAApB,CAAJ;AAAA,mBAAtB;AACD;;AAED,qBAAKE,YAAL,CAAkBlC,WAAlB;;;;;;;;;;;;;;;;;;wBAfgB;AAChB,aAAO,uBAAP;AACD;;;wBAEwB;AACvB,aAAO,2BAAP;AACD;;;;EAXwCmC,2D",
      "sourceRoot": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/",
      "sourcesContent": [
        "import {Converter} from '@xviz/ros';\nimport {TimeUtil} from 'rosbag';\nimport {_getPoseTrajectory as getPoseTrajectory} from '@xviz/builder';\nimport _ from 'lodash';\nimport {VisualizationMarkerArray} from './visualization-markerarray-converter';\n\nexport class NavPathForward extends Converter {\n  constructor(config) {\n    super(config);\n  }\n\n  static get name() {\n    return 'NavPathForward';\n  }\n\n  static get messageType() {\n    return 'nav_msgs/Path';\n  }\n\n  async convertMessage(frame, xvizBuilder) {\n    const data = frame[this.topic];\n    if (!data) {\n      return;\n    }\n\n    for (const d of data) {\n        const polyline = d.message.poses.map(p => {\n          const {position} = p.pose;\n          return [position.x, position.y, 0];\n        });\n  \n        xvizBuilder.primitive('/vehicle/nav_path_forward').polyline(polyline);\n    }   \n  }\n\n  getMetadata(xvizMetaBuilder) {\n    xvizMetaBuilder\n        .stream('/vehicle/nav_path_forward')\n        .coordinate('IDENTITY')\n        .category('primitive')\n        .type('polyline')\n        .streamStyle({\n            stroke_color: '#57AD57AA',\n            stroke_width: 1.4,\n            stroke_width_min_pixels: 1\n        });\n  }\n}\n\n/******************************************************************** */\n\nexport class NavPathBackward extends Converter {\n  constructor(config) {\n    super(config);\n  }\n\n  static get name() {\n    return 'NavPathBackward';\n  }\n\n  static get messageType() {\n    return 'nav_msgs/Path';\n  }\n\n  async convertMessage(frame, xvizBuilder) {\n    const data = frame[this.topic];\n    if (!data) {\n      return;\n    }\n\n    for (const d of data) {\n        const polyline = d.message.poses.map(p => {\n          const {position} = p.pose;\n          return [position.x, position.y, 0];\n        });\n  \n        xvizBuilder.primitive('/vehicle/nav_path_backward').polyline(polyline);\n    }   \n  }\n\n  getMetadata(xvizMetaBuilder) {\n    xvizMetaBuilder\n        .stream('/vehicle/nav_path_backward')\n        .coordinate('IDENTITY')\n        .category('primitive')\n        .type('polyline')\n        .streamStyle({\n            stroke_color: '#B3052533',\n            stroke_width: 1.4,\n            stroke_width_min_pixels: 1\n        });\n  }\n}\n\n/******************************************************************** */\n\nexport class NavPath extends Converter {\n  constructor(config) {\n    super(config);\n  }\n\n  static get name() {\n    return 'NavPath';\n  }\n\n  static get messageType() {\n    return 'nav_msgs/Path';\n  }\n\n  async convertMessage(frame, xvizBuilder) {\n    const data = frame[this.topic];\n    if (!data) {\n      return;\n    }\n\n    for (const d of data) {\n        const polyline = d.message.poses.map(p => {\n          const {position} = p.pose;\n          return [position.x, position.y, 0];\n        });\n  \n        xvizBuilder.primitive('/vehicle/nav_path').polyline(polyline);\n    }   \n  }\n\n  getMetadata(xvizMetaBuilder) {\n    xvizMetaBuilder\n        .stream('/vehicle/nav_path')\n        .coordinate('IDENTITY')\n        .category('primitive')\n        .type('polyline')\n        .streamStyle({\n            stroke_color: '#F3F6A2AA',\n            stroke_width: 1.4,\n            stroke_width_min_pixels: 1\n        });\n  }\n}\n\n/******************************************************************** */\n\nexport class NavPathDecided extends Converter {\n  constructor(config) {\n    super(config);\n  }\n\n  static get name() {\n    return 'NavPathDecided';\n  }\n\n  static get messageType() {\n    return 'nav_msgs/Path';\n  }\n\n  async convertMessage(frame, xvizBuilder) {\n    const data = frame[this.topic];\n    if (!data) {\n      return;\n    }\n\n    for (const d of data) {\n        const polyline = d.message.poses.map(p => {\n          const {position} = p.pose;\n          return [position.x, position.y, 0];\n        });\n  \n        xvizBuilder.primitive('/vehicle/nav_path_decided').polyline(polyline);\n    }   \n  }\n\n  getMetadata(xvizMetaBuilder) {\n    xvizMetaBuilder\n        .stream('/vehicle/nav_path_decided')\n        .coordinate('IDENTITY')\n        .category('primitive')\n        .type('polyline')\n        .streamStyle({\n            stroke_color: '#57AD57AA',\n            stroke_width: 1.4,\n            stroke_width_min_pixels: 1\n        });\n  }\n}\n\n/******************************************************************** */\n\nexport class NavPathFilteredMarker extends VisualizationMarkerArray {\n  constructor(config) {\n    super(config);\n  }\n\n  static get name() {\n    return 'NavPathFilteredMarker';\n  }\n\n  static get messageType() {\n    return 'visualization_msgs/Marker';\n  }\n\n  async convertMessage(frame, xvizBuilder) {\n    const messages = frame[this.topic];\n    if (messages) {\n      const markers = _.map(messages, 'message');\n      markers.forEach(marker => this._processMarker(marker));\n    }\n\n    this.writeMarkers(xvizBuilder);\n  }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1594096689819
  },
  "{\"sourceRoot\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin\",\"filename\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/image-converter.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin",
      "filename": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/image-converter.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/image-converter.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/image-converter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/",
        "sourceFileName": "image-converter.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SensorImage = void 0;\n\nvar _converter = _interopRequireDefault(require(\"./converter\"));\n\nvar _sharp = _interopRequireDefault(require(\"sharp\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar SensorImage = /*#__PURE__*/function (_Converter) {\n  _inherits(SensorImage, _Converter);\n\n  var _super = _createSuper(SensorImage);\n\n  function SensorImage(config) {\n    _classCallCheck(this, SensorImage);\n\n    return _super.call(this, config);\n  }\n\n  _createClass(SensorImage, [{\n    key: \"convertMessage\",\n    value: function () {\n      var _convertMessage = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(frame, xvizBuilder) {\n        var msgs, message, width, height, data, imgData;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                msgs = frame[this.topic];\n\n                if (msgs) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                if (!msgs.length) {\n                  _context.next = 10;\n                  break;\n                }\n\n                message = msgs[msgs.length - 1].message;\n                width = message.width, height = message.height, data = message.data; // TODO: encoding should be handled properly instead of assuming a 3 channel image.\n                // http://docs.ros.org/jade/api/sensor_msgs/html/image__encodings_8h_source.html\n\n                _context.next = 8;\n                return (0, _sharp[\"default\"])(data, {\n                  raw: {\n                    width: width,\n                    height: height,\n                    channels: 3\n                  }\n                }).resize(400).toFormat('png').toBuffer();\n\n              case 8:\n                imgData = _context.sent;\n                xvizBuilder.primitive(this.xvizStream).image(nodeBufferToTypedArray(imgData), 'png').dimensions(width, height);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function convertMessage(_x, _x2) {\n        return _convertMessage.apply(this, arguments);\n      }\n\n      return convertMessage;\n    }()\n  }, {\n    key: \"getMetadata\",\n    value: function getMetadata(xvizMetaBuilder) {\n      var xb = xvizMetaBuilder;\n      xb.stream(this.xvizStream).category('primitive').type('image');\n    }\n  }], [{\n    key: \"name\",\n    get: function get() {\n      return 'SensorImage';\n    }\n  }, {\n    key: \"messageType\",\n    get: function get() {\n      return 'sensor_msgs/Image';\n    }\n  }]);\n\n  return SensorImage;\n}(_converter[\"default\"]);\n\nexports.SensorImage = SensorImage;\n\nfunction nodeBufferToTypedArray(buffer) {\n  // TODO - per docs we should just be able to call buffer.buffer, but there are issues\n  var typedArray = new Uint8Array(buffer);\n  return typedArray;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImltYWdlLWNvbnZlcnRlci5qcyJdLCJuYW1lcyI6WyJTZW5zb3JJbWFnZSIsImNvbmZpZyIsImZyYW1lIiwieHZpekJ1aWxkZXIiLCJtc2dzIiwidG9waWMiLCJsZW5ndGgiLCJtZXNzYWdlIiwid2lkdGgiLCJoZWlnaHQiLCJkYXRhIiwicmF3IiwiY2hhbm5lbHMiLCJyZXNpemUiLCJ0b0Zvcm1hdCIsInRvQnVmZmVyIiwiaW1nRGF0YSIsInByaW1pdGl2ZSIsInh2aXpTdHJlYW0iLCJpbWFnZSIsIm5vZGVCdWZmZXJUb1R5cGVkQXJyYXkiLCJkaW1lbnNpb25zIiwieHZpek1ldGFCdWlsZGVyIiwieGIiLCJzdHJlYW0iLCJjYXRlZ29yeSIsInR5cGUiLCJDb252ZXJ0ZXIiLCJidWZmZXIiLCJ0eXBlZEFycmF5IiwiVWludDhBcnJheSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFFYUEsVzs7Ozs7QUFDWCx1QkFBWUMsTUFBWixFQUFvQjtBQUFBOztBQUFBLDZCQUNaQSxNQURZO0FBRW5COzs7OztxR0FVb0JDLEssRUFBT0MsVzs7Ozs7O0FBQ3BCQyxnQkFBQUEsSSxHQUFPRixLQUFLLENBQUMsS0FBS0csS0FBTixDOztvQkFDYkQsSTs7Ozs7Ozs7cUJBSURBLElBQUksQ0FBQ0UsTTs7Ozs7QUFDQUMsZ0JBQUFBLE8sR0FBV0gsSUFBSSxDQUFDQSxJQUFJLENBQUNFLE1BQUwsR0FBYyxDQUFmLEMsQ0FBZkMsTztBQUNBQyxnQkFBQUEsSyxHQUE2Q0QsTyxDQUE3Q0MsSyxFQUFPQyxNLEdBQXNDRixPLENBQXRDRSxNLEVBQThCQyxJLEdBQVFILE8sQ0FBUkcsSSxFQUU1QztBQUNBOzs7dUJBRXNCLHVCQUFNQSxJQUFOLEVBQVk7QUFDaENDLGtCQUFBQSxHQUFHLEVBQUU7QUFDSEgsb0JBQUFBLEtBQUssRUFBTEEsS0FERztBQUVIQyxvQkFBQUEsTUFBTSxFQUFOQSxNQUZHO0FBR0hHLG9CQUFBQSxRQUFRLEVBQUU7QUFIUDtBQUQyQixpQkFBWixFQU9uQkMsTUFQbUIsQ0FPWixHQVBZLEVBUW5CQyxRQVJtQixDQVFWLEtBUlUsRUFTbkJDLFFBVG1CLEU7OztBQUFoQkMsZ0JBQUFBLE87QUFXTmIsZ0JBQUFBLFdBQVcsQ0FDUmMsU0FESCxDQUNhLEtBQUtDLFVBRGxCLEVBRUdDLEtBRkgsQ0FFU0Msc0JBQXNCLENBQUNKLE9BQUQsQ0FGL0IsRUFFMEMsS0FGMUMsRUFHR0ssVUFISCxDQUdjYixLQUhkLEVBR3FCQyxNQUhyQjs7Ozs7Ozs7Ozs7Ozs7Ozs7O2dDQU9RYSxlLEVBQWlCO0FBQzNCLFVBQU1DLEVBQUUsR0FBR0QsZUFBWDtBQUNBQyxNQUFBQSxFQUFFLENBQUNDLE1BQUgsQ0FBVSxLQUFLTixVQUFmLEVBQ0dPLFFBREgsQ0FDWSxXQURaLEVBRUdDLElBRkgsQ0FFUSxPQUZSO0FBR0Q7Ozt3QkE1Q2lCO0FBQ2hCLGFBQU8sYUFBUDtBQUNEOzs7d0JBRXdCO0FBQ3ZCLGFBQU8sbUJBQVA7QUFDRDs7OztFQVg4QkMscUI7Ozs7QUFvRGpDLFNBQVNQLHNCQUFULENBQWdDUSxNQUFoQyxFQUF3QztBQUN0QztBQUNBLE1BQU1DLFVBQVUsR0FBRyxJQUFJQyxVQUFKLENBQWVGLE1BQWYsQ0FBbkI7QUFDQSxTQUFPQyxVQUFQO0FBQ0QiLCJzb3VyY2VSb290IjoiL2hvbWUvZWtpbi9EZXNrdG9wL3h2aXovZXhhbXBsZXMvY29udmVydGVycy9yb3MtZWtpbi9tZXNzYWdlcy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29udmVydGVyIGZyb20gJy4vY29udmVydGVyJztcbmltcG9ydCBzaGFycCBmcm9tICdzaGFycCc7XG5cbmV4cG9ydCBjbGFzcyBTZW5zb3JJbWFnZSBleHRlbmRzIENvbnZlcnRlciB7XG4gIGNvbnN0cnVjdG9yKGNvbmZpZykge1xuICAgIHN1cGVyKGNvbmZpZyk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IG5hbWUoKSB7XG4gICAgcmV0dXJuICdTZW5zb3JJbWFnZSc7XG4gIH1cblxuICBzdGF0aWMgZ2V0IG1lc3NhZ2VUeXBlKCkge1xuICAgIHJldHVybiAnc2Vuc29yX21zZ3MvSW1hZ2UnO1xuICB9XG5cbiAgYXN5bmMgY29udmVydE1lc3NhZ2UoZnJhbWUsIHh2aXpCdWlsZGVyKSB7XG4gICAgY29uc3QgbXNncyA9IGZyYW1lW3RoaXMudG9waWNdO1xuICAgIGlmICghbXNncykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChtc2dzLmxlbmd0aCkge1xuICAgICAgY29uc3Qge21lc3NhZ2V9ID0gbXNnc1ttc2dzLmxlbmd0aCAtIDFdO1xuICAgICAgY29uc3Qge3dpZHRoLCBoZWlnaHQsIC8qIGVuY29kaW5nLCBzdGVwLCAqLyBkYXRhfSA9IG1lc3NhZ2U7XG5cbiAgICAgIC8vIFRPRE86IGVuY29kaW5nIHNob3VsZCBiZSBoYW5kbGVkIHByb3Blcmx5IGluc3RlYWQgb2YgYXNzdW1pbmcgYSAzIGNoYW5uZWwgaW1hZ2UuXG4gICAgICAvLyBodHRwOi8vZG9jcy5yb3Mub3JnL2phZGUvYXBpL3NlbnNvcl9tc2dzL2h0bWwvaW1hZ2VfX2VuY29kaW5nc184aF9zb3VyY2UuaHRtbFxuXG4gICAgICBjb25zdCBpbWdEYXRhID0gYXdhaXQgc2hhcnAoZGF0YSwge1xuICAgICAgICByYXc6IHtcbiAgICAgICAgICB3aWR0aCxcbiAgICAgICAgICBoZWlnaHQsXG4gICAgICAgICAgY2hhbm5lbHM6IDNcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgICAgLnJlc2l6ZSg0MDApXG4gICAgICAgIC50b0Zvcm1hdCgncG5nJylcbiAgICAgICAgLnRvQnVmZmVyKCk7XG5cbiAgICAgIHh2aXpCdWlsZGVyXG4gICAgICAgIC5wcmltaXRpdmUodGhpcy54dml6U3RyZWFtKVxuICAgICAgICAuaW1hZ2Uobm9kZUJ1ZmZlclRvVHlwZWRBcnJheShpbWdEYXRhKSwgJ3BuZycpXG4gICAgICAgIC5kaW1lbnNpb25zKHdpZHRoLCBoZWlnaHQpO1xuICAgIH1cbiAgfVxuXG4gIGdldE1ldGFkYXRhKHh2aXpNZXRhQnVpbGRlcikge1xuICAgIGNvbnN0IHhiID0geHZpek1ldGFCdWlsZGVyO1xuICAgIHhiLnN0cmVhbSh0aGlzLnh2aXpTdHJlYW0pXG4gICAgICAuY2F0ZWdvcnkoJ3ByaW1pdGl2ZScpXG4gICAgICAudHlwZSgnaW1hZ2UnKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBub2RlQnVmZmVyVG9UeXBlZEFycmF5KGJ1ZmZlcikge1xuICAvLyBUT0RPIC0gcGVyIGRvY3Mgd2Ugc2hvdWxkIGp1c3QgYmUgYWJsZSB0byBjYWxsIGJ1ZmZlci5idWZmZXIsIGJ1dCB0aGVyZSBhcmUgaXNzdWVzXG4gIGNvbnN0IHR5cGVkQXJyYXkgPSBuZXcgVWludDhBcnJheShidWZmZXIpO1xuICByZXR1cm4gdHlwZWRBcnJheTtcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "image-converter.js"
      ],
      "names": [
        "SensorImage",
        "config",
        "frame",
        "xvizBuilder",
        "msgs",
        "topic",
        "length",
        "message",
        "width",
        "height",
        "data",
        "raw",
        "channels",
        "resize",
        "toFormat",
        "toBuffer",
        "imgData",
        "primitive",
        "xvizStream",
        "image",
        "nodeBufferToTypedArray",
        "dimensions",
        "xvizMetaBuilder",
        "xb",
        "stream",
        "category",
        "type",
        "Converter",
        "buffer",
        "typedArray",
        "Uint8Array"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEaA,W;;;;;AACX,uBAAYC,MAAZ,EAAoB;AAAA;;AAAA,6BACZA,MADY;AAEnB;;;;;qGAUoBC,K,EAAOC,W;;;;;;AACpBC,gBAAAA,I,GAAOF,KAAK,CAAC,KAAKG,KAAN,C;;oBACbD,I;;;;;;;;qBAIDA,IAAI,CAACE,M;;;;;AACAC,gBAAAA,O,GAAWH,IAAI,CAACA,IAAI,CAACE,MAAL,GAAc,CAAf,C,CAAfC,O;AACAC,gBAAAA,K,GAA6CD,O,CAA7CC,K,EAAOC,M,GAAsCF,O,CAAtCE,M,EAA8BC,I,GAAQH,O,CAARG,I,EAE5C;AACA;;;uBAEsB,uBAAMA,IAAN,EAAY;AAChCC,kBAAAA,GAAG,EAAE;AACHH,oBAAAA,KAAK,EAALA,KADG;AAEHC,oBAAAA,MAAM,EAANA,MAFG;AAGHG,oBAAAA,QAAQ,EAAE;AAHP;AAD2B,iBAAZ,EAOnBC,MAPmB,CAOZ,GAPY,EAQnBC,QARmB,CAQV,KARU,EASnBC,QATmB,E;;;AAAhBC,gBAAAA,O;AAWNb,gBAAAA,WAAW,CACRc,SADH,CACa,KAAKC,UADlB,EAEGC,KAFH,CAESC,sBAAsB,CAACJ,OAAD,CAF/B,EAE0C,KAF1C,EAGGK,UAHH,CAGcb,KAHd,EAGqBC,MAHrB;;;;;;;;;;;;;;;;;;gCAOQa,e,EAAiB;AAC3B,UAAMC,EAAE,GAAGD,eAAX;AACAC,MAAAA,EAAE,CAACC,MAAH,CAAU,KAAKN,UAAf,EACGO,QADH,CACY,WADZ,EAEGC,IAFH,CAEQ,OAFR;AAGD;;;wBA5CiB;AAChB,aAAO,aAAP;AACD;;;wBAEwB;AACvB,aAAO,mBAAP;AACD;;;;EAX8BC,qB;;;;AAoDjC,SAASP,sBAAT,CAAgCQ,MAAhC,EAAwC;AACtC;AACA,MAAMC,UAAU,GAAG,IAAIC,UAAJ,CAAeF,MAAf,CAAnB;AACA,SAAOC,UAAP;AACD",
      "sourceRoot": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/",
      "sourcesContent": [
        "import Converter from './converter';\nimport sharp from 'sharp';\n\nexport class SensorImage extends Converter {\n  constructor(config) {\n    super(config);\n  }\n\n  static get name() {\n    return 'SensorImage';\n  }\n\n  static get messageType() {\n    return 'sensor_msgs/Image';\n  }\n\n  async convertMessage(frame, xvizBuilder) {\n    const msgs = frame[this.topic];\n    if (!msgs) {\n      return;\n    }\n\n    if (msgs.length) {\n      const {message} = msgs[msgs.length - 1];\n      const {width, height, /* encoding, step, */ data} = message;\n\n      // TODO: encoding should be handled properly instead of assuming a 3 channel image.\n      // http://docs.ros.org/jade/api/sensor_msgs/html/image__encodings_8h_source.html\n\n      const imgData = await sharp(data, {\n        raw: {\n          width,\n          height,\n          channels: 3\n        }\n      })\n        .resize(400)\n        .toFormat('png')\n        .toBuffer();\n\n      xvizBuilder\n        .primitive(this.xvizStream)\n        .image(nodeBufferToTypedArray(imgData), 'png')\n        .dimensions(width, height);\n    }\n  }\n\n  getMetadata(xvizMetaBuilder) {\n    const xb = xvizMetaBuilder;\n    xb.stream(this.xvizStream)\n      .category('primitive')\n      .type('image');\n  }\n}\n\nfunction nodeBufferToTypedArray(buffer) {\n  // TODO - per docs we should just be able to call buffer.buffer, but there are issues\n  const typedArray = new Uint8Array(buffer);\n  return typedArray;\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1593664712500
  },
  "{\"sourceRoot\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin\",\"filename\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/converter.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin",
      "filename": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/converter.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/converter.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/converter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/",
        "sourceFileName": "converter.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Converter = /*#__PURE__*/function () {\n  function Converter(config) {\n    _classCallCheck(this, Converter);\n\n    this.config = config;\n\n    this._setup();\n  }\n\n  _createClass(Converter, [{\n    key: \"_setup\",\n    value: function _setup() {\n      if (!this.config.topic) {\n        throw new Error('ROS Message converter must have a topic to convert');\n      }\n\n      if (!this.config.xvizStream) {\n        this.config.xvizStream = this.config.topic;\n      }\n    }\n  }, {\n    key: \"convertMessage\",\n    value: function () {\n      var _convertMessage = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(frame, xvizBuilder) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                throw new Error('Implement me');\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function convertMessage(_x, _x2) {\n        return _convertMessage.apply(this, arguments);\n      }\n\n      return convertMessage;\n    }()\n  }, {\n    key: \"getMetadata\",\n    value: function getMetadata(xvizMetaBuilder, aux) {\n      throw new Error('Implement me');\n    }\n  }, {\n    key: \"topic\",\n    get: function get() {\n      return this.config.topic;\n    }\n  }, {\n    key: \"xvizStream\",\n    get: function get() {\n      return this.config.xvizStream;\n    }\n  }]);\n\n  return Converter;\n}();\n\nexports[\"default\"] = Converter;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnZlcnRlci5qcyJdLCJuYW1lcyI6WyJDb252ZXJ0ZXIiLCJjb25maWciLCJfc2V0dXAiLCJ0b3BpYyIsIkVycm9yIiwieHZpelN0cmVhbSIsImZyYW1lIiwieHZpekJ1aWxkZXIiLCJ4dml6TWV0YUJ1aWxkZXIiLCJhdXgiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBQXFCQSxTO0FBQ2pCLHFCQUFZQyxNQUFaLEVBQW9CO0FBQUE7O0FBQ2xCLFNBQUtBLE1BQUwsR0FBY0EsTUFBZDs7QUFFQSxTQUFLQyxNQUFMO0FBQ0Q7Ozs7NkJBRVE7QUFDUCxVQUFJLENBQUMsS0FBS0QsTUFBTCxDQUFZRSxLQUFqQixFQUF3QjtBQUN0QixjQUFNLElBQUlDLEtBQUosQ0FBVSxvREFBVixDQUFOO0FBQ0Q7O0FBRUQsVUFBSSxDQUFDLEtBQUtILE1BQUwsQ0FBWUksVUFBakIsRUFBNkI7QUFDM0IsYUFBS0osTUFBTCxDQUFZSSxVQUFaLEdBQXlCLEtBQUtKLE1BQUwsQ0FBWUUsS0FBckM7QUFDRDtBQUNGOzs7O3FHQVVvQkcsSyxFQUFPQyxXOzs7OztzQkFDcEIsSUFBSUgsS0FBSixDQUFVLGNBQVYsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7O2dDQUdJSSxlLEVBQWlCQyxHLEVBQUs7QUFDaEMsWUFBTSxJQUFJTCxLQUFKLENBQVUsY0FBVixDQUFOO0FBQ0Q7Ozt3QkFkVztBQUNWLGFBQU8sS0FBS0gsTUFBTCxDQUFZRSxLQUFuQjtBQUNEOzs7d0JBRWdCO0FBQ2YsYUFBTyxLQUFLRixNQUFMLENBQVlJLFVBQW5CO0FBQ0QiLCJzb3VyY2VSb290IjoiL2hvbWUvZWtpbi9EZXNrdG9wL3h2aXovZXhhbXBsZXMvY29udmVydGVycy9yb3MtZWtpbi9tZXNzYWdlcy8iLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBDb252ZXJ0ZXIge1xuICAgIGNvbnN0cnVjdG9yKGNvbmZpZykge1xuICAgICAgdGhpcy5jb25maWcgPSBjb25maWc7XG4gIFxuICAgICAgdGhpcy5fc2V0dXAoKTtcbiAgICB9XG4gIFxuICAgIF9zZXR1cCgpIHtcbiAgICAgIGlmICghdGhpcy5jb25maWcudG9waWMpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdST1MgTWVzc2FnZSBjb252ZXJ0ZXIgbXVzdCBoYXZlIGEgdG9waWMgdG8gY29udmVydCcpO1xuICAgICAgfVxuICBcbiAgICAgIGlmICghdGhpcy5jb25maWcueHZpelN0cmVhbSkge1xuICAgICAgICB0aGlzLmNvbmZpZy54dml6U3RyZWFtID0gdGhpcy5jb25maWcudG9waWM7XG4gICAgICB9XG4gICAgfVxuICBcbiAgICBnZXQgdG9waWMoKSB7XG4gICAgICByZXR1cm4gdGhpcy5jb25maWcudG9waWM7XG4gICAgfVxuICBcbiAgICBnZXQgeHZpelN0cmVhbSgpIHtcbiAgICAgIHJldHVybiB0aGlzLmNvbmZpZy54dml6U3RyZWFtO1xuICAgIH1cbiAgXG4gICAgYXN5bmMgY29udmVydE1lc3NhZ2UoZnJhbWUsIHh2aXpCdWlsZGVyKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ltcGxlbWVudCBtZScpO1xuICAgIH1cbiAgXG4gICAgZ2V0TWV0YWRhdGEoeHZpek1ldGFCdWlsZGVyLCBhdXgpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignSW1wbGVtZW50IG1lJyk7XG4gICAgfVxuICB9Il19",
    "map": {
      "version": 3,
      "sources": [
        "converter.js"
      ],
      "names": [
        "Converter",
        "config",
        "_setup",
        "topic",
        "Error",
        "xvizStream",
        "frame",
        "xvizBuilder",
        "xvizMetaBuilder",
        "aux"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;IAAqBA,S;AACjB,qBAAYC,MAAZ,EAAoB;AAAA;;AAClB,SAAKA,MAAL,GAAcA,MAAd;;AAEA,SAAKC,MAAL;AACD;;;;6BAEQ;AACP,UAAI,CAAC,KAAKD,MAAL,CAAYE,KAAjB,EAAwB;AACtB,cAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;AACD;;AAED,UAAI,CAAC,KAAKH,MAAL,CAAYI,UAAjB,EAA6B;AAC3B,aAAKJ,MAAL,CAAYI,UAAZ,GAAyB,KAAKJ,MAAL,CAAYE,KAArC;AACD;AACF;;;;qGAUoBG,K,EAAOC,W;;;;;sBACpB,IAAIH,KAAJ,CAAU,cAAV,C;;;;;;;;;;;;;;;;;;gCAGII,e,EAAiBC,G,EAAK;AAChC,YAAM,IAAIL,KAAJ,CAAU,cAAV,CAAN;AACD;;;wBAdW;AACV,aAAO,KAAKH,MAAL,CAAYE,KAAnB;AACD;;;wBAEgB;AACf,aAAO,KAAKF,MAAL,CAAYI,UAAnB;AACD",
      "sourceRoot": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/",
      "sourcesContent": [
        "export default class Converter {\n    constructor(config) {\n      this.config = config;\n  \n      this._setup();\n    }\n  \n    _setup() {\n      if (!this.config.topic) {\n        throw new Error('ROS Message converter must have a topic to convert');\n      }\n  \n      if (!this.config.xvizStream) {\n        this.config.xvizStream = this.config.topic;\n      }\n    }\n  \n    get topic() {\n      return this.config.topic;\n    }\n  \n    get xvizStream() {\n      return this.config.xvizStream;\n    }\n  \n    async convertMessage(frame, xvizBuilder) {\n      throw new Error('Implement me');\n    }\n  \n    getMetadata(xvizMetaBuilder, aux) {\n      throw new Error('Implement me');\n    }\n  }"
      ]
    },
    "sourceType": "script",
    "mtime": 1593663798536
  },
  "{\"sourceRoot\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin\",\"filename\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/tracklets-converter.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin",
      "filename": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/tracklets-converter.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/tracklets-converter.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/tracklets-converter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/",
        "sourceFileName": "tracklets-converter.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TrackletsConverter = void 0;\n\nvar _ros = require(\"@xviz/ros\");\n\nvar _rosbag = require(\"rosbag\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar TrackletsConverter = /*#__PURE__*/function (_Converter) {\n  _inherits(TrackletsConverter, _Converter);\n\n  var _super = _createSuper(TrackletsConverter);\n\n  function TrackletsConverter(config) {\n    _classCallCheck(this, TrackletsConverter);\n\n    return _super.call(this, config);\n  }\n\n  _createClass(TrackletsConverter, [{\n    key: \"convertMessage\",\n    value: function () {\n      var _convertMessage = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(frame, xvizBuilder) {\n        var data, _data, timestamp, message, _message$pose$pose$po, x, y, z, pos, _message$pose$pose$or, w, roll, pitch, yaw;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = frame[this.topic];\n\n                if (data) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                _data = data[data.length - 1], timestamp = _data.timestamp, message = _data.message; // Read Position\n\n                _message$pose$pose$po = message.pose.pose.position, x = _message$pose$pose$po.x, y = _message$pose$pose$po.y, z = _message$pose$pose$po.z;\n                pos = [x, y, z]; //console.log(pos);\n                // Read Orientation\n\n                _message$pose$pose$or = message.pose.pose.orientation, x = _message$pose$pose$or.x, y = _message$pose$pose$or.y, z = _message$pose$pose$or.z, w = _message$pose$pose$or.w; // Convert orientation (from Quaternions to Roll-Pitch-Yaw)\n\n                roll = Math.atan2(2 * x * w + 2 * y * z, 1 - 2 * x * x - 2 * y * y);\n                pitch = Math.asin(2 * w * y + 2 * z * x);\n                yaw = Math.atan2(2 * z * w + 2 * x * y, 1 - 2 * y * y - 2 * z * z); //console.log([roll, pitch, yaw]);\n\n                xvizBuilder.primitive('/tracklets/objects').polygon([[pos[0] - 1, pos[1] - 2, pos[2]], [pos[0] - 1, pos[1] + 2, pos[2]], [pos[0] + 1, pos[1] + 2, pos[2]], [pos[0] + 1, pos[1] - 2, pos[2]]]).classes('Car').style({\n                  height: 2\n                }).id('217');\n                xvizBuilder.primitive('/tracklets/tracking_points').circle([pos[0], pos[1], pos[2]]).id('217');\n                xvizBuilder.primitive('tracklets/labels').position([pos[0], pos[1], pos[2] + 2]).text('217');\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function convertMessage(_x, _x2) {\n        return _convertMessage.apply(this, arguments);\n      }\n\n      return convertMessage;\n    }()\n  }, {\n    key: \"getMetadata\",\n    value: function getMetadata(xvizMetaBuilder) {\n      xvizMetaBuilder.stream('/tracklets/objects').category('primitive').type('polygon').streamStyle({\n        extruded: true,\n        wireframe: true,\n        fill_color: '#00000080'\n      }).styleClass('Car', {\n        fill_color: '#50B3FF20',\n        stroke_color: '#50B3FF30'\n      }) //.coordinate('VEHICLE_RELATIVE')\n      .pose().stream('/tracklets/tracking_points').category('primitive').type('circle').streamStyle({\n        radius: 0.2,\n        stroke_width: 0,\n        fill_color: '#FFC043'\n      }).stream('/tracklets/labels').category('primitive').type('text').streamStyle({\n        text_size: 18,\n        fill_color: '#DCDCCD'\n      });\n    }\n  }], [{\n    key: \"name\",\n    get: function get() {\n      return 'TrackletsConverter';\n    }\n  }, {\n    key: \"messageType\",\n    get: function get() {\n      return 'nav_msgs/Odometry';\n    }\n  }]);\n\n  return TrackletsConverter;\n}(_ros.Converter);\n\nexports.TrackletsConverter = TrackletsConverter;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYWNrbGV0cy1jb252ZXJ0ZXIuanMiXSwibmFtZXMiOlsiVHJhY2tsZXRzQ29udmVydGVyIiwiY29uZmlnIiwiZnJhbWUiLCJ4dml6QnVpbGRlciIsImRhdGEiLCJ0b3BpYyIsImxlbmd0aCIsInRpbWVzdGFtcCIsIm1lc3NhZ2UiLCJwb3NlIiwicG9zaXRpb24iLCJ4IiwieSIsInoiLCJwb3MiLCJvcmllbnRhdGlvbiIsInciLCJyb2xsIiwiTWF0aCIsImF0YW4yIiwicGl0Y2giLCJhc2luIiwieWF3IiwicHJpbWl0aXZlIiwicG9seWdvbiIsImNsYXNzZXMiLCJzdHlsZSIsImhlaWdodCIsImlkIiwiY2lyY2xlIiwidGV4dCIsInh2aXpNZXRhQnVpbGRlciIsInN0cmVhbSIsImNhdGVnb3J5IiwidHlwZSIsInN0cmVhbVN0eWxlIiwiZXh0cnVkZWQiLCJ3aXJlZnJhbWUiLCJmaWxsX2NvbG9yIiwic3R5bGVDbGFzcyIsInN0cm9rZV9jb2xvciIsInJhZGl1cyIsInN0cm9rZV93aWR0aCIsInRleHRfc2l6ZSIsIkNvbnZlcnRlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBRWFBLGtCOzs7OztBQUNYLDhCQUFZQyxNQUFaLEVBQW9CO0FBQUE7O0FBQUEsNkJBQ1pBLE1BRFk7QUFFbkI7Ozs7O3FHQVVvQkMsSyxFQUFPQyxXOzs7Ozs7O0FBQ3BCQyxnQkFBQUEsSSxHQUFPRixLQUFLLENBQUMsS0FBS0csS0FBTixDOztvQkFDYkQsSTs7Ozs7Ozs7d0JBSXdCQSxJQUFJLENBQUNBLElBQUksQ0FBQ0UsTUFBTCxHQUFjLENBQWYsQyxFQUExQkMsUyxTQUFBQSxTLEVBQVdDLE8sU0FBQUEsTyxFQUVsQjs7d0NBT0lBLE8sQ0FMRkMsSSxDQUNFQSxJLENBQ0VDLFEsRUFBV0MsQyx5QkFBQUEsQyxFQUFHQyxDLHlCQUFBQSxDLEVBQUdDLEMseUJBQUFBLEM7QUFJakJDLGdCQUFBQSxHLEdBQU0sQ0FBQ0gsQ0FBRCxFQUFJQyxDQUFKLEVBQU9DLENBQVAsQyxFQUNaO0FBRUE7O3dDQU9JTCxPLENBTEZDLEksQ0FDRUEsSSxDQUNFTSxXLEVBQWNKLEMseUJBQUFBLEMsRUFBR0MsQyx5QkFBQUEsQyxFQUFHQyxDLHlCQUFBQSxDLEVBQUdHLEMseUJBQUFBLEMsRUFLN0I7O0FBQ01DLGdCQUFBQSxJLEdBQU9DLElBQUksQ0FBQ0MsS0FBTCxDQUFXLElBQUVSLENBQUYsR0FBSUssQ0FBSixHQUFRLElBQUVKLENBQUYsR0FBSUMsQ0FBdkIsRUFBMEIsSUFBSSxJQUFFRixDQUFGLEdBQUlBLENBQVIsR0FBWSxJQUFFQyxDQUFGLEdBQUlBLENBQTFDLEM7QUFDUFEsZ0JBQUFBLEssR0FBU0YsSUFBSSxDQUFDRyxJQUFMLENBQVUsSUFBRUwsQ0FBRixHQUFJSixDQUFKLEdBQVEsSUFBRUMsQ0FBRixHQUFJRixDQUF0QixDO0FBQ1RXLGdCQUFBQSxHLEdBQU1KLElBQUksQ0FBQ0MsS0FBTCxDQUFXLElBQUVOLENBQUYsR0FBSUcsQ0FBSixHQUFRLElBQUVMLENBQUYsR0FBSUMsQ0FBdkIsRUFBMEIsSUFBSSxJQUFFQSxDQUFGLEdBQUlBLENBQVIsR0FBWSxJQUFFQyxDQUFGLEdBQUlBLENBQTFDLEMsRUFDWjs7QUFFQVYsZ0JBQUFBLFdBQVcsQ0FDUm9CLFNBREgsQ0FDYSxvQkFEYixFQUVHQyxPQUZILENBRVcsQ0FBQyxDQUFDVixHQUFHLENBQUMsQ0FBRCxDQUFILEdBQU8sQ0FBUixFQUFXQSxHQUFHLENBQUMsQ0FBRCxDQUFILEdBQU8sQ0FBbEIsRUFBcUJBLEdBQUcsQ0FBQyxDQUFELENBQXhCLENBQUQsRUFDQyxDQUFDQSxHQUFHLENBQUMsQ0FBRCxDQUFILEdBQU8sQ0FBUixFQUFXQSxHQUFHLENBQUMsQ0FBRCxDQUFILEdBQU8sQ0FBbEIsRUFBcUJBLEdBQUcsQ0FBQyxDQUFELENBQXhCLENBREQsRUFFQyxDQUFDQSxHQUFHLENBQUMsQ0FBRCxDQUFILEdBQU8sQ0FBUixFQUFXQSxHQUFHLENBQUMsQ0FBRCxDQUFILEdBQU8sQ0FBbEIsRUFBcUJBLEdBQUcsQ0FBQyxDQUFELENBQXhCLENBRkQsRUFHQyxDQUFDQSxHQUFHLENBQUMsQ0FBRCxDQUFILEdBQU8sQ0FBUixFQUFXQSxHQUFHLENBQUMsQ0FBRCxDQUFILEdBQU8sQ0FBbEIsRUFBcUJBLEdBQUcsQ0FBQyxDQUFELENBQXhCLENBSEQsQ0FGWCxFQU1HVyxPQU5ILENBTVcsS0FOWCxFQU9HQyxLQVBILENBT1M7QUFDTEMsa0JBQUFBLE1BQU0sRUFBRTtBQURILGlCQVBULEVBVUdDLEVBVkgsQ0FVTSxLQVZOO0FBWUF6QixnQkFBQUEsV0FBVyxDQUNSb0IsU0FESCxDQUNhLDRCQURiLEVBRUdNLE1BRkgsQ0FFVSxDQUFDZixHQUFHLENBQUMsQ0FBRCxDQUFKLEVBQVNBLEdBQUcsQ0FBQyxDQUFELENBQVosRUFBaUJBLEdBQUcsQ0FBQyxDQUFELENBQXBCLENBRlYsRUFHR2MsRUFISCxDQUdNLEtBSE47QUFLQXpCLGdCQUFBQSxXQUFXLENBQ1JvQixTQURILENBQ2Esa0JBRGIsRUFFR2IsUUFGSCxDQUVZLENBQUNJLEdBQUcsQ0FBQyxDQUFELENBQUosRUFBU0EsR0FBRyxDQUFDLENBQUQsQ0FBWixFQUFpQkEsR0FBRyxDQUFDLENBQUQsQ0FBSCxHQUFTLENBQTFCLENBRlosRUFHR2dCLElBSEgsQ0FHUSxLQUhSOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Z0NBTVVDLGUsRUFBaUI7QUFDM0JBLE1BQUFBLGVBQWUsQ0FDWkMsTUFESCxDQUNVLG9CQURWLEVBRUdDLFFBRkgsQ0FFWSxXQUZaLEVBR0dDLElBSEgsQ0FHUSxTQUhSLEVBSUdDLFdBSkgsQ0FJZTtBQUNYQyxRQUFBQSxRQUFRLEVBQUUsSUFEQztBQUVYQyxRQUFBQSxTQUFTLEVBQUUsSUFGQTtBQUdYQyxRQUFBQSxVQUFVLEVBQUU7QUFIRCxPQUpmLEVBU0dDLFVBVEgsQ0FTYyxLQVRkLEVBU3FCO0FBQ2pCRCxRQUFBQSxVQUFVLEVBQUUsV0FESztBQUVqQkUsUUFBQUEsWUFBWSxFQUFFO0FBRkcsT0FUckIsRUFhRTtBQWJGLE9BY0cvQixJQWRILEdBZ0JHdUIsTUFoQkgsQ0FnQlUsNEJBaEJWLEVBaUJHQyxRQWpCSCxDQWlCWSxXQWpCWixFQWtCR0MsSUFsQkgsQ0FrQlEsUUFsQlIsRUFtQkdDLFdBbkJILENBbUJlO0FBQ1hNLFFBQUFBLE1BQU0sRUFBRSxHQURHO0FBRVhDLFFBQUFBLFlBQVksRUFBRSxDQUZIO0FBR1hKLFFBQUFBLFVBQVUsRUFBRTtBQUhELE9BbkJmLEVBeUJHTixNQXpCSCxDQXlCVSxtQkF6QlYsRUEwQkdDLFFBMUJILENBMEJZLFdBMUJaLEVBMkJHQyxJQTNCSCxDQTJCUSxNQTNCUixFQTRCR0MsV0E1QkgsQ0E0QmU7QUFDWFEsUUFBQUEsU0FBUyxFQUFFLEVBREE7QUFFWEwsUUFBQUEsVUFBVSxFQUFFO0FBRkQsT0E1QmY7QUFnQ0Q7Ozt3QkFsR2lCO0FBQ2hCLGFBQU8sb0JBQVA7QUFDRDs7O3dCQUV3QjtBQUN2QixhQUFPLG1CQUFQO0FBQ0Q7Ozs7RUFYcUNNLGMiLCJzb3VyY2VSb290IjoiL2hvbWUvZWtpbi9EZXNrdG9wL3h2aXovZXhhbXBsZXMvY29udmVydGVycy9yb3MtZWtpbi9tZXNzYWdlcy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbnZlcnRlcn0gZnJvbSAnQHh2aXovcm9zJztcbmltcG9ydCB7VGltZVV0aWx9IGZyb20gJ3Jvc2JhZyc7XG5cbmV4cG9ydCBjbGFzcyBUcmFja2xldHNDb252ZXJ0ZXIgZXh0ZW5kcyBDb252ZXJ0ZXIge1xuICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcbiAgICBzdXBlcihjb25maWcpO1xuICB9XG5cbiAgc3RhdGljIGdldCBuYW1lKCkge1xuICAgIHJldHVybiAnVHJhY2tsZXRzQ29udmVydGVyJztcbiAgfVxuXG4gIHN0YXRpYyBnZXQgbWVzc2FnZVR5cGUoKSB7XG4gICAgcmV0dXJuICduYXZfbXNncy9PZG9tZXRyeSc7XG4gIH1cblxuICBhc3luYyBjb252ZXJ0TWVzc2FnZShmcmFtZSwgeHZpekJ1aWxkZXIpIHtcbiAgICBjb25zdCBkYXRhID0gZnJhbWVbdGhpcy50b3BpY107XG4gICAgaWYgKCFkYXRhKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3Qge3RpbWVzdGFtcCwgbWVzc2FnZX0gPSBkYXRhW2RhdGEubGVuZ3RoIC0gMV07XG5cbiAgICAvLyBSZWFkIFBvc2l0aW9uXG4gICAgdmFyIHtcbiAgICAgIHBvc2U6IHtcbiAgICAgICAgcG9zZToge1xuICAgICAgICAgIHBvc2l0aW9uOiB7eCwgeSwgen1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gPSBtZXNzYWdlO1xuICAgIGNvbnN0IHBvcyA9IFt4LCB5LCB6XTtcbiAgICAvL2NvbnNvbGUubG9nKHBvcyk7XG5cbiAgICAvLyBSZWFkIE9yaWVudGF0aW9uXG4gICAgdmFyIHtcbiAgICAgIHBvc2U6IHtcbiAgICAgICAgcG9zZToge1xuICAgICAgICAgIG9yaWVudGF0aW9uOiB7eCwgeSwgeiwgd31cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gPSBtZXNzYWdlO1xuXG4gICAgLy8gQ29udmVydCBvcmllbnRhdGlvbiAoZnJvbSBRdWF0ZXJuaW9ucyB0byBSb2xsLVBpdGNoLVlhdylcbiAgICBjb25zdCByb2xsID0gTWF0aC5hdGFuMigyKngqdyArIDIqeSp6LCAxIC0gMip4KnggLSAyKnkqeSk7XG4gICAgY29uc3QgcGl0Y2ggPSAgTWF0aC5hc2luKDIqdyp5ICsgMip6KngpO1xuICAgIGNvbnN0IHlhdyA9IE1hdGguYXRhbjIoMip6KncgKyAyKngqeSwgMSAtIDIqeSp5IC0gMip6KnopO1xuICAgIC8vY29uc29sZS5sb2coW3JvbGwsIHBpdGNoLCB5YXddKTtcblxuICAgIHh2aXpCdWlsZGVyXG4gICAgICAucHJpbWl0aXZlKCcvdHJhY2tsZXRzL29iamVjdHMnKVxuICAgICAgLnBvbHlnb24oW1twb3NbMF0tMSwgcG9zWzFdLTIsIHBvc1syXV0sIFxuICAgICAgICAgICAgICAgIFtwb3NbMF0tMSwgcG9zWzFdKzIsIHBvc1syXV0sIFxuICAgICAgICAgICAgICAgIFtwb3NbMF0rMSwgcG9zWzFdKzIsIHBvc1syXV0sIFxuICAgICAgICAgICAgICAgIFtwb3NbMF0rMSwgcG9zWzFdLTIsIHBvc1syXV1dKVxuICAgICAgLmNsYXNzZXMoJ0NhcicpXG4gICAgICAuc3R5bGUoe1xuICAgICAgICBoZWlnaHQ6IDJcbiAgICAgIH0pXG4gICAgICAuaWQoJzIxNycpO1xuICAgIFxuICAgIHh2aXpCdWlsZGVyXG4gICAgICAucHJpbWl0aXZlKCcvdHJhY2tsZXRzL3RyYWNraW5nX3BvaW50cycpXG4gICAgICAuY2lyY2xlKFtwb3NbMF0sIHBvc1sxXSwgcG9zWzJdXSlcbiAgICAgIC5pZCgnMjE3Jyk7XG5cbiAgICB4dml6QnVpbGRlclxuICAgICAgLnByaW1pdGl2ZSgndHJhY2tsZXRzL2xhYmVscycpXG4gICAgICAucG9zaXRpb24oW3Bvc1swXSwgcG9zWzFdLCBwb3NbMl0gKyAyXSlcbiAgICAgIC50ZXh0KCcyMTcnKTtcbiAgfVxuXG4gIGdldE1ldGFkYXRhKHh2aXpNZXRhQnVpbGRlcikge1xuICAgIHh2aXpNZXRhQnVpbGRlclxuICAgICAgLnN0cmVhbSgnL3RyYWNrbGV0cy9vYmplY3RzJylcbiAgICAgIC5jYXRlZ29yeSgncHJpbWl0aXZlJylcbiAgICAgIC50eXBlKCdwb2x5Z29uJylcbiAgICAgIC5zdHJlYW1TdHlsZSh7XG4gICAgICAgIGV4dHJ1ZGVkOiB0cnVlLFxuICAgICAgICB3aXJlZnJhbWU6IHRydWUsXG4gICAgICAgIGZpbGxfY29sb3I6ICcjMDAwMDAwODAnXG4gICAgICB9KVxuICAgICAgLnN0eWxlQ2xhc3MoJ0NhcicsIHtcbiAgICAgICAgZmlsbF9jb2xvcjogJyM1MEIzRkYyMCcsXG4gICAgICAgIHN0cm9rZV9jb2xvcjogJyM1MEIzRkYzMCdcbiAgICAgIH0pXG4gICAgICAvLy5jb29yZGluYXRlKCdWRUhJQ0xFX1JFTEFUSVZFJylcbiAgICAgIC5wb3NlKClcbiAgICAgIFxuICAgICAgLnN0cmVhbSgnL3RyYWNrbGV0cy90cmFja2luZ19wb2ludHMnKVxuICAgICAgLmNhdGVnb3J5KCdwcmltaXRpdmUnKVxuICAgICAgLnR5cGUoJ2NpcmNsZScpXG4gICAgICAuc3RyZWFtU3R5bGUoe1xuICAgICAgICByYWRpdXM6IDAuMixcbiAgICAgICAgc3Ryb2tlX3dpZHRoOiAwLFxuICAgICAgICBmaWxsX2NvbG9yOiAnI0ZGQzA0MydcbiAgICAgIH0pXG5cbiAgICAgIC5zdHJlYW0oJy90cmFja2xldHMvbGFiZWxzJylcbiAgICAgIC5jYXRlZ29yeSgncHJpbWl0aXZlJylcbiAgICAgIC50eXBlKCd0ZXh0JylcbiAgICAgIC5zdHJlYW1TdHlsZSh7XG4gICAgICAgIHRleHRfc2l6ZTogMTgsXG4gICAgICAgIGZpbGxfY29sb3I6ICcjRENEQ0NEJ1xuICAgICAgfSk7XG4gIH1cbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "tracklets-converter.js"
      ],
      "names": [
        "TrackletsConverter",
        "config",
        "frame",
        "xvizBuilder",
        "data",
        "topic",
        "length",
        "timestamp",
        "message",
        "pose",
        "position",
        "x",
        "y",
        "z",
        "pos",
        "orientation",
        "w",
        "roll",
        "Math",
        "atan2",
        "pitch",
        "asin",
        "yaw",
        "primitive",
        "polygon",
        "classes",
        "style",
        "height",
        "id",
        "circle",
        "text",
        "xvizMetaBuilder",
        "stream",
        "category",
        "type",
        "streamStyle",
        "extruded",
        "wireframe",
        "fill_color",
        "styleClass",
        "stroke_color",
        "radius",
        "stroke_width",
        "text_size",
        "Converter"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEaA,kB;;;;;AACX,8BAAYC,MAAZ,EAAoB;AAAA;;AAAA,6BACZA,MADY;AAEnB;;;;;qGAUoBC,K,EAAOC,W;;;;;;;AACpBC,gBAAAA,I,GAAOF,KAAK,CAAC,KAAKG,KAAN,C;;oBACbD,I;;;;;;;;wBAIwBA,IAAI,CAACA,IAAI,CAACE,MAAL,GAAc,CAAf,C,EAA1BC,S,SAAAA,S,EAAWC,O,SAAAA,O,EAElB;;wCAOIA,O,CALFC,I,CACEA,I,CACEC,Q,EAAWC,C,yBAAAA,C,EAAGC,C,yBAAAA,C,EAAGC,C,yBAAAA,C;AAIjBC,gBAAAA,G,GAAM,CAACH,CAAD,EAAIC,CAAJ,EAAOC,CAAP,C,EACZ;AAEA;;wCAOIL,O,CALFC,I,CACEA,I,CACEM,W,EAAcJ,C,yBAAAA,C,EAAGC,C,yBAAAA,C,EAAGC,C,yBAAAA,C,EAAGG,C,yBAAAA,C,EAK7B;;AACMC,gBAAAA,I,GAAOC,IAAI,CAACC,KAAL,CAAW,IAAER,CAAF,GAAIK,CAAJ,GAAQ,IAAEJ,CAAF,GAAIC,CAAvB,EAA0B,IAAI,IAAEF,CAAF,GAAIA,CAAR,GAAY,IAAEC,CAAF,GAAIA,CAA1C,C;AACPQ,gBAAAA,K,GAASF,IAAI,CAACG,IAAL,CAAU,IAAEL,CAAF,GAAIJ,CAAJ,GAAQ,IAAEC,CAAF,GAAIF,CAAtB,C;AACTW,gBAAAA,G,GAAMJ,IAAI,CAACC,KAAL,CAAW,IAAEN,CAAF,GAAIG,CAAJ,GAAQ,IAAEL,CAAF,GAAIC,CAAvB,EAA0B,IAAI,IAAEA,CAAF,GAAIA,CAAR,GAAY,IAAEC,CAAF,GAAIA,CAA1C,C,EACZ;;AAEAV,gBAAAA,WAAW,CACRoB,SADH,CACa,oBADb,EAEGC,OAFH,CAEW,CAAC,CAACV,GAAG,CAAC,CAAD,CAAH,GAAO,CAAR,EAAWA,GAAG,CAAC,CAAD,CAAH,GAAO,CAAlB,EAAqBA,GAAG,CAAC,CAAD,CAAxB,CAAD,EACC,CAACA,GAAG,CAAC,CAAD,CAAH,GAAO,CAAR,EAAWA,GAAG,CAAC,CAAD,CAAH,GAAO,CAAlB,EAAqBA,GAAG,CAAC,CAAD,CAAxB,CADD,EAEC,CAACA,GAAG,CAAC,CAAD,CAAH,GAAO,CAAR,EAAWA,GAAG,CAAC,CAAD,CAAH,GAAO,CAAlB,EAAqBA,GAAG,CAAC,CAAD,CAAxB,CAFD,EAGC,CAACA,GAAG,CAAC,CAAD,CAAH,GAAO,CAAR,EAAWA,GAAG,CAAC,CAAD,CAAH,GAAO,CAAlB,EAAqBA,GAAG,CAAC,CAAD,CAAxB,CAHD,CAFX,EAMGW,OANH,CAMW,KANX,EAOGC,KAPH,CAOS;AACLC,kBAAAA,MAAM,EAAE;AADH,iBAPT,EAUGC,EAVH,CAUM,KAVN;AAYAzB,gBAAAA,WAAW,CACRoB,SADH,CACa,4BADb,EAEGM,MAFH,CAEU,CAACf,GAAG,CAAC,CAAD,CAAJ,EAASA,GAAG,CAAC,CAAD,CAAZ,EAAiBA,GAAG,CAAC,CAAD,CAApB,CAFV,EAGGc,EAHH,CAGM,KAHN;AAKAzB,gBAAAA,WAAW,CACRoB,SADH,CACa,kBADb,EAEGb,QAFH,CAEY,CAACI,GAAG,CAAC,CAAD,CAAJ,EAASA,GAAG,CAAC,CAAD,CAAZ,EAAiBA,GAAG,CAAC,CAAD,CAAH,GAAS,CAA1B,CAFZ,EAGGgB,IAHH,CAGQ,KAHR;;;;;;;;;;;;;;;;;;gCAMUC,e,EAAiB;AAC3BA,MAAAA,eAAe,CACZC,MADH,CACU,oBADV,EAEGC,QAFH,CAEY,WAFZ,EAGGC,IAHH,CAGQ,SAHR,EAIGC,WAJH,CAIe;AACXC,QAAAA,QAAQ,EAAE,IADC;AAEXC,QAAAA,SAAS,EAAE,IAFA;AAGXC,QAAAA,UAAU,EAAE;AAHD,OAJf,EASGC,UATH,CASc,KATd,EASqB;AACjBD,QAAAA,UAAU,EAAE,WADK;AAEjBE,QAAAA,YAAY,EAAE;AAFG,OATrB,EAaE;AAbF,OAcG/B,IAdH,GAgBGuB,MAhBH,CAgBU,4BAhBV,EAiBGC,QAjBH,CAiBY,WAjBZ,EAkBGC,IAlBH,CAkBQ,QAlBR,EAmBGC,WAnBH,CAmBe;AACXM,QAAAA,MAAM,EAAE,GADG;AAEXC,QAAAA,YAAY,EAAE,CAFH;AAGXJ,QAAAA,UAAU,EAAE;AAHD,OAnBf,EAyBGN,MAzBH,CAyBU,mBAzBV,EA0BGC,QA1BH,CA0BY,WA1BZ,EA2BGC,IA3BH,CA2BQ,MA3BR,EA4BGC,WA5BH,CA4Be;AACXQ,QAAAA,SAAS,EAAE,EADA;AAEXL,QAAAA,UAAU,EAAE;AAFD,OA5Bf;AAgCD;;;wBAlGiB;AAChB,aAAO,oBAAP;AACD;;;wBAEwB;AACvB,aAAO,mBAAP;AACD;;;;EAXqCM,c",
      "sourceRoot": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/",
      "sourcesContent": [
        "import {Converter} from '@xviz/ros';\nimport {TimeUtil} from 'rosbag';\n\nexport class TrackletsConverter extends Converter {\n  constructor(config) {\n    super(config);\n  }\n\n  static get name() {\n    return 'TrackletsConverter';\n  }\n\n  static get messageType() {\n    return 'nav_msgs/Odometry';\n  }\n\n  async convertMessage(frame, xvizBuilder) {\n    const data = frame[this.topic];\n    if (!data) {\n      return;\n    }\n\n    const {timestamp, message} = data[data.length - 1];\n\n    // Read Position\n    var {\n      pose: {\n        pose: {\n          position: {x, y, z}\n        }\n      }\n    } = message;\n    const pos = [x, y, z];\n    //console.log(pos);\n\n    // Read Orientation\n    var {\n      pose: {\n        pose: {\n          orientation: {x, y, z, w}\n        }\n      }\n    } = message;\n\n    // Convert orientation (from Quaternions to Roll-Pitch-Yaw)\n    const roll = Math.atan2(2*x*w + 2*y*z, 1 - 2*x*x - 2*y*y);\n    const pitch =  Math.asin(2*w*y + 2*z*x);\n    const yaw = Math.atan2(2*z*w + 2*x*y, 1 - 2*y*y - 2*z*z);\n    //console.log([roll, pitch, yaw]);\n\n    xvizBuilder\n      .primitive('/tracklets/objects')\n      .polygon([[pos[0]-1, pos[1]-2, pos[2]], \n                [pos[0]-1, pos[1]+2, pos[2]], \n                [pos[0]+1, pos[1]+2, pos[2]], \n                [pos[0]+1, pos[1]-2, pos[2]]])\n      .classes('Car')\n      .style({\n        height: 2\n      })\n      .id('217');\n    \n    xvizBuilder\n      .primitive('/tracklets/tracking_points')\n      .circle([pos[0], pos[1], pos[2]])\n      .id('217');\n\n    xvizBuilder\n      .primitive('tracklets/labels')\n      .position([pos[0], pos[1], pos[2] + 2])\n      .text('217');\n  }\n\n  getMetadata(xvizMetaBuilder) {\n    xvizMetaBuilder\n      .stream('/tracklets/objects')\n      .category('primitive')\n      .type('polygon')\n      .streamStyle({\n        extruded: true,\n        wireframe: true,\n        fill_color: '#00000080'\n      })\n      .styleClass('Car', {\n        fill_color: '#50B3FF20',\n        stroke_color: '#50B3FF30'\n      })\n      //.coordinate('VEHICLE_RELATIVE')\n      .pose()\n      \n      .stream('/tracklets/tracking_points')\n      .category('primitive')\n      .type('circle')\n      .streamStyle({\n        radius: 0.2,\n        stroke_width: 0,\n        fill_color: '#FFC043'\n      })\n\n      .stream('/tracklets/labels')\n      .category('primitive')\n      .type('text')\n      .streamStyle({\n        text_size: 18,\n        fill_color: '#DCDCCD'\n      });\n  }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1594097211738
  },
  "{\"sourceRoot\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin\",\"filename\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/visualization-markerarray-converter.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ekin/Desktop/xviz/examples/converters/ros-ekin\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin",
      "filename": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/visualization-markerarray-converter.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/visualization-markerarray-converter.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/visualization-markerarray-converter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/",
        "sourceFileName": "visualization-markerarray-converter.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VisualizationMarkerArray = void 0;\n\nvar _converter = _interopRequireDefault(require(\"./converter\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _math = require(\"math.gl\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar ACTION_ADD = 0;\nvar ACTION_DELETE = 2;\nvar ACTION_DELETE_ALL = 3;\nvar NAMESPACE_SEPARATOR = '/';\n/**\n * Handles converting MarkerArray messages\n */\n\nvar VisualizationMarkerArray = /*#__PURE__*/function (_Converter) {\n  _inherits(VisualizationMarkerArray, _Converter);\n\n  var _super = _createSuper(VisualizationMarkerArray);\n\n  function VisualizationMarkerArray(config) {\n    var _this;\n\n    _classCallCheck(this, VisualizationMarkerArray);\n\n    // acceptMarker /* Function to filter the markers to use (if not defined, uses all markers) */\n    _this = _super.call(this, config);\n\n    _this.acceptMarker = _this.config.acceptMarker || function () {\n      return true;\n    };\n\n    _this.markersMap = {};\n    _this.ARROW_STREAM = [_this.xvizStream, 'arrow'].join(NAMESPACE_SEPARATOR);\n    _this.SPHERE_STREAM = [_this.xvizStream, 'sphere'].join(NAMESPACE_SEPARATOR);\n    _this.LINESTRIP_STREAM = [_this.xvizStream, 'linestrip'].join(NAMESPACE_SEPARATOR);\n    _this.LINELIST_STREAM = [_this.xvizStream, 'linelist'].join(NAMESPACE_SEPARATOR);\n    _this.TEXT_STREAM = [_this.xvizStream, 'text'].join(NAMESPACE_SEPARATOR);\n    return _this;\n  }\n\n  _createClass(VisualizationMarkerArray, [{\n    key: \"convertMessage\",\n    value: function convertMessage(frame, xvizBuilder) {\n      var _this2 = this;\n\n      var messages = frame[this.topic];\n\n      if (messages) {\n        var _iterator = _createForOfIteratorHelper(messages),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var message = _step.value.message;\n            message.markers.forEach(function (marker) {\n              return _this2._processMarker(marker);\n            });\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n\n      this.writeMarkers(xvizBuilder);\n    }\n  }, {\n    key: \"getMetadata\",\n    value: function getMetadata(xvizMetaBuilder) {\n      xvizMetaBuilder.stream(this.ARROW_STREAM).coordinate('IDENTITY').category('primitive').type('polyline').stream(this.LINESTRIP_STREAM).coordinate('IDENTITY').category('primitive').type('polyline').streamStyle({\n        stroke_width: 0.2,\n        stroke_width_min_pixels: 1\n      }).stream(this.LINELIST_STREAM).coordinate('IDENTITY').category('primitive').type('polyline').streamStyle({\n        stroke_width: 0.2,\n        stroke_width_min_pixels: 1\n      }).stream(this.SPHERE_STREAM).coordinate('IDENTITY').category('primitive').type('circle').streamStyle({\n        stroke_width: 0.2\n      }).stream(this.TEXT_STREAM).category('primitive').type('text').streamStyle({\n        size: 18,\n        fill_color: '#0000FF'\n      });\n    }\n  }, {\n    key: \"writeMarkers\",\n    value: function writeMarkers(xvizBuilder) {\n      /* Unimplemented markers\n      uint8 CUBE=1\n      uint8 CYLINDER=3\n      uint8 CUBE_LIST=6\n      uint8 SPHERE_LIST=7\n      uint8 POINTS=8\n      uint8 MESH_RESOURCE=10\n      uint8 TRIANGLE_LIST=11\n      */\n      var WRITERS = {\n        '0': this._writeArrow.bind(this),\n        '2': this._writeSphere.bind(this),\n        '4': this._writeLineStrip.bind(this),\n        '5': this._writeLineList.bind(this),\n        '9': this._writeText.bind(this)\n      };\n      /*\n      const writerName = {\n        '0': 'Arrow',\n        '2': 'Sphere',\n        '4': 'LineStrip',\n        '5': 'LineList',\n        '9': 'Text'\n      };\n      */\n\n      _lodash[\"default\"].forOwn(this.markersMap, function (marker) {\n        var writer = WRITERS[marker.type];\n\n        if (writer) {\n          writer(marker, xvizBuilder);\n        }\n      });\n    }\n  }, {\n    key: \"_writeArrow\",\n    value: function _writeArrow(marker, xvizBuilder) {\n      var points = this._makeArrow(marker.points, marker.pose);\n\n      xvizBuilder.primitive(this.ARROW_STREAM).polyline(points).style({\n        stroke_color: this._toColor(marker)\n      }).id(this._getMarkerId(marker));\n    }\n  }, {\n    key: \"_writeSphere\",\n    value: function _writeSphere(marker, xvizBuilder) {\n      var RADIUS = marker.scale.x / 2;\n\n      var points = this._mapPoints([{\n        x: 0,\n        y: 0,\n        z: 0\n      }], marker.pose);\n\n      xvizBuilder.primitive(this.SPHERE_STREAM).circle(points[0], RADIUS).style({\n        fill_color: this._toColor(marker)\n      }).id(this._getMarkerId(marker));\n    }\n  }, {\n    key: \"_writeLineStrip\",\n    value: function _writeLineStrip(marker, xvizBuilder) {\n      xvizBuilder.primitive(this.LINESTRIP_STREAM).polyline(this._mapPoints(marker.points, marker.pose)).style({\n        stroke_color: this._toColor(marker)\n      }).id(this._getMarkerId(marker));\n    }\n  }, {\n    key: \"_writeLineList\",\n    value: function _writeLineList(marker, xvizBuilder) {\n      var _this3 = this;\n\n      var lines = _lodash[\"default\"].chunk(marker.points, 2);\n\n      lines.forEach(function (line, index) {\n        xvizBuilder.primitive(_this3.LINELIST_STREAM).polyline(_this3._mapPoints(line, marker.pose)).style({\n          stroke_color: _this3._toColor(marker)\n        }).id([_this3._getMarkerId(marker), index].join(NAMESPACE_SEPARATOR));\n      });\n    }\n  }, {\n    key: \"_writeText\",\n    value: function _writeText(marker, xvizBuilder) {\n      var points = this._mapPoints([{\n        x: 0,\n        y: 0,\n        z: 2\n      } // z=2 to float above\n      ], marker.pose);\n\n      xvizBuilder.primitive(this.TEXT_STREAM).position(points[0]).text(marker.text);\n    }\n  }, {\n    key: \"_toColor\",\n    value: function _toColor(marker) {\n      var color = marker.color || (marker.colors || [])[0];\n\n      if (color) {\n        return [color.r, color.g, color.b, color.a].map(function (v) {\n          return Math.round(v * 255);\n        });\n      }\n\n      return [128, 128, 128, 255]; // default color\n    }\n  }, {\n    key: \"_mapPoints\",\n    value: function _mapPoints(points, pose) {\n      var origin = new _math.Vector3([pose.position.x, pose.position.y, 0]);\n      return points.map(function (p) {\n        p = [p.x, p.y, 0];\n        return origin.clone().add(p).toArray();\n      });\n    }\n  }, {\n    key: \"_makeVector\",\n    value: function _makeVector(p) {\n      var v = [p[1][0] - p[0][0], p[1][1] - p[0][1], p[1][2] - p[0][2]];\n      return v;\n    }\n  }, {\n    key: \"_makePoint\",\n    value: function _makePoint(base, vector) {\n      var v = [base[0] + vector[0], base[1] + vector[1], base[2] + vector[2]];\n      return v;\n    }\n  }, {\n    key: \"_makeArrow\",\n    value: function _makeArrow(points, pose) {\n      var p = this._mapPoints(points, pose); // vector pointing to starting point\n\n\n      var vecA = new _math.Vector3(this._makeVector([p[1], p[0]]));\n      var pCrossVec = vecA.clone().scale(0.3);\n\n      var pCross = this._makePoint(p[1], pCrossVec.toArray());\n\n      vecA.scale(0.5);\n      var vecB = vecA.clone();\n\n      var leftPt = this._makePoint(p[1], vecB.rotateZ({\n        radians: -Math.PI / 4\n      }).toArray());\n\n      var rightPt = this._makePoint(p[1], vecA.rotateZ({\n        radians: Math.PI / 4\n      }).toArray());\n\n      p.push(p[1]);\n      return [p[0], pCross, leftPt, p[1], rightPt, pCross];\n    }\n  }, {\n    key: \"_processMarker\",\n    value: function _processMarker(marker) {\n      var markerId = this._getMarkerId(marker);\n\n      if (marker.action === ACTION_ADD) {\n        // We only run the acceptMarker filter for ADD because we want to avoid accidentally filtering\n        // out DELETE messages. It's safe to process all DELETE messages because worse case they're just a noop\n        // if they don't apply\n        if (this.acceptMarker(marker)) {\n          this.markersMap[markerId] = marker;\n        }\n      } else if (marker.action === ACTION_DELETE) {\n        if (!marker.ns) {\n          this.markersMap = {};\n        } else {\n          this.markersMap = _lodash[\"default\"].pickBy(this.markersMap, function (value, key) {\n            // Using `startsWith` to support removing entire namespaces when an id isn't specified\n            return !key.startsWith(markerId);\n          });\n        }\n      } else if (marker.action === ACTION_DELETE_ALL) {\n        this.markersMap = {};\n      }\n    }\n  }, {\n    key: \"_getMarkerId\",\n    value: function _getMarkerId(marker) {\n      return [marker.ns, marker.id].join(NAMESPACE_SEPARATOR);\n    }\n  }], [{\n    key: \"name\",\n    get: function get() {\n      return 'VisualizationMarkerArray';\n    }\n  }, {\n    key: \"messageType\",\n    get: function get() {\n      return 'visualization_msgs/MarkerArray';\n    }\n  }]);\n\n  return VisualizationMarkerArray;\n}(_converter[\"default\"]);\n\nexports.VisualizationMarkerArray = VisualizationMarkerArray;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "visualization-markerarray-converter.js"
      ],
      "names": [
        "ACTION_ADD",
        "ACTION_DELETE",
        "ACTION_DELETE_ALL",
        "NAMESPACE_SEPARATOR",
        "VisualizationMarkerArray",
        "config",
        "acceptMarker",
        "markersMap",
        "ARROW_STREAM",
        "xvizStream",
        "join",
        "SPHERE_STREAM",
        "LINESTRIP_STREAM",
        "LINELIST_STREAM",
        "TEXT_STREAM",
        "frame",
        "xvizBuilder",
        "messages",
        "topic",
        "message",
        "markers",
        "forEach",
        "marker",
        "_processMarker",
        "writeMarkers",
        "xvizMetaBuilder",
        "stream",
        "coordinate",
        "category",
        "type",
        "streamStyle",
        "stroke_width",
        "stroke_width_min_pixels",
        "size",
        "fill_color",
        "WRITERS",
        "_writeArrow",
        "bind",
        "_writeSphere",
        "_writeLineStrip",
        "_writeLineList",
        "_writeText",
        "_",
        "forOwn",
        "writer",
        "points",
        "_makeArrow",
        "pose",
        "primitive",
        "polyline",
        "style",
        "stroke_color",
        "_toColor",
        "id",
        "_getMarkerId",
        "RADIUS",
        "scale",
        "x",
        "_mapPoints",
        "y",
        "z",
        "circle",
        "lines",
        "chunk",
        "line",
        "index",
        "position",
        "text",
        "color",
        "colors",
        "r",
        "g",
        "b",
        "a",
        "map",
        "v",
        "Math",
        "round",
        "origin",
        "Vector3",
        "p",
        "clone",
        "add",
        "toArray",
        "base",
        "vector",
        "vecA",
        "_makeVector",
        "pCrossVec",
        "pCross",
        "_makePoint",
        "vecB",
        "leftPt",
        "rotateZ",
        "radians",
        "PI",
        "rightPt",
        "push",
        "markerId",
        "action",
        "ns",
        "pickBy",
        "value",
        "key",
        "startsWith",
        "Converter"
      ],
      "mappings": ";;;;;;;AAcA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,UAAU,GAAG,CAAnB;AACA,IAAMC,aAAa,GAAG,CAAtB;AACA,IAAMC,iBAAiB,GAAG,CAA1B;AAEA,IAAMC,mBAAmB,GAAG,GAA5B;AAEA;;;;IAGaC,wB;;;;;AACX,oCAAYC,MAAZ,EAAoB;AAAA;;AAAA;;AAClB;AACA,8BAAMA,MAAN;;AACA,UAAKC,YAAL,GAAoB,MAAKD,MAAL,CAAYC,YAAZ,IAA6B;AAAA,aAAM,IAAN;AAAA,KAAjD;;AAEA,UAAKC,UAAL,GAAkB,EAAlB;AAEA,UAAKC,YAAL,GAAoB,CAAC,MAAKC,UAAN,EAAkB,OAAlB,EAA2BC,IAA3B,CAAgCP,mBAAhC,CAApB;AACA,UAAKQ,aAAL,GAAqB,CAAC,MAAKF,UAAN,EAAkB,QAAlB,EAA4BC,IAA5B,CAAiCP,mBAAjC,CAArB;AACA,UAAKS,gBAAL,GAAwB,CAAC,MAAKH,UAAN,EAAkB,WAAlB,EAA+BC,IAA/B,CAAoCP,mBAApC,CAAxB;AACA,UAAKU,eAAL,GAAuB,CAAC,MAAKJ,UAAN,EAAkB,UAAlB,EAA8BC,IAA9B,CAAmCP,mBAAnC,CAAvB;AACA,UAAKW,WAAL,GAAmB,CAAC,MAAKL,UAAN,EAAkB,MAAlB,EAA0BC,IAA1B,CAA+BP,mBAA/B,CAAnB;AAXkB;AAYnB;;;;mCAUcY,K,EAAOC,W,EAAa;AAAA;;AACjC,UAAMC,QAAQ,GAAGF,KAAK,CAAC,KAAKG,KAAN,CAAtB;;AACA,UAAID,QAAJ,EAAc;AAAA,mDACYA,QADZ;AAAA;;AAAA;AACZ,8DAAkC;AAAA,gBAAtBE,OAAsB,eAAtBA,OAAsB;AAChCA,YAAAA,OAAO,CAACC,OAAR,CAAgBC,OAAhB,CAAwB,UAAAC,MAAM;AAAA,qBAAI,MAAI,CAACC,cAAL,CAAoBD,MAApB,CAAJ;AAAA,aAA9B;AACD;AAHW;AAAA;AAAA;AAAA;AAAA;AAIb;;AAED,WAAKE,YAAL,CAAkBR,WAAlB;AACD;;;gCAEWS,e,EAAiB;AAC3BA,MAAAA,eAAe,CACZC,MADH,CACU,KAAKlB,YADf,EAEGmB,UAFH,CAEc,UAFd,EAGGC,QAHH,CAGY,WAHZ,EAIGC,IAJH,CAIQ,UAJR,EAMGH,MANH,CAMU,KAAKd,gBANf,EAOGe,UAPH,CAOc,UAPd,EAQGC,QARH,CAQY,WARZ,EASGC,IATH,CASQ,UATR,EAUGC,WAVH,CAUe;AACXC,QAAAA,YAAY,EAAE,GADH;AAEXC,QAAAA,uBAAuB,EAAE;AAFd,OAVf,EAeGN,MAfH,CAeU,KAAKb,eAff,EAgBGc,UAhBH,CAgBc,UAhBd,EAiBGC,QAjBH,CAiBY,WAjBZ,EAkBGC,IAlBH,CAkBQ,UAlBR,EAmBGC,WAnBH,CAmBe;AACXC,QAAAA,YAAY,EAAE,GADH;AAEXC,QAAAA,uBAAuB,EAAE;AAFd,OAnBf,EAwBGN,MAxBH,CAwBU,KAAKf,aAxBf,EAyBGgB,UAzBH,CAyBc,UAzBd,EA0BGC,QA1BH,CA0BY,WA1BZ,EA2BGC,IA3BH,CA2BQ,QA3BR,EA4BGC,WA5BH,CA4Be;AACXC,QAAAA,YAAY,EAAE;AADH,OA5Bf,EAgCGL,MAhCH,CAgCU,KAAKZ,WAhCf,EAiCGc,QAjCH,CAiCY,WAjCZ,EAkCGC,IAlCH,CAkCQ,MAlCR,EAmCGC,WAnCH,CAmCe;AACXG,QAAAA,IAAI,EAAE,EADK;AAEXC,QAAAA,UAAU,EAAE;AAFD,OAnCf;AAuCD;;;iCAEYlB,W,EAAa;AACxB;;;;;;;;;AAUA,UAAMmB,OAAO,GAAG;AACd,aAAK,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CADS;AAEd,aAAK,KAAKC,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAFS;AAGd,aAAK,KAAKE,eAAL,CAAqBF,IAArB,CAA0B,IAA1B,CAHS;AAId,aAAK,KAAKG,cAAL,CAAoBH,IAApB,CAAyB,IAAzB,CAJS;AAKd,aAAK,KAAKI,UAAL,CAAgBJ,IAAhB,CAAqB,IAArB;AALS,OAAhB;AAQA;;;;;;;;;;AAUAK,yBAAEC,MAAF,CAAS,KAAKpC,UAAd,EAA0B,UAAAe,MAAM,EAAI;AAClC,YAAMsB,MAAM,GAAGT,OAAO,CAACb,MAAM,CAACO,IAAR,CAAtB;;AACA,YAAIe,MAAJ,EAAY;AACVA,UAAAA,MAAM,CAACtB,MAAD,EAASN,WAAT,CAAN;AACD;AACF,OALD;AAMD;;;gCAEWM,M,EAAQN,W,EAAa;AAC/B,UAAM6B,MAAM,GAAG,KAAKC,UAAL,CAAgBxB,MAAM,CAACuB,MAAvB,EAA+BvB,MAAM,CAACyB,IAAtC,CAAf;;AACA/B,MAAAA,WAAW,CACRgC,SADH,CACa,KAAKxC,YADlB,EAEGyC,QAFH,CAEYJ,MAFZ,EAGGK,KAHH,CAGS;AAACC,QAAAA,YAAY,EAAE,KAAKC,QAAL,CAAc9B,MAAd;AAAf,OAHT,EAIG+B,EAJH,CAIM,KAAKC,YAAL,CAAkBhC,MAAlB,CAJN;AAKD;;;iCAEYA,M,EAAQN,W,EAAa;AAChC,UAAMuC,MAAM,GAAGjC,MAAM,CAACkC,KAAP,CAAaC,CAAb,GAAiB,CAAhC;;AACA,UAAMZ,MAAM,GAAG,KAAKa,UAAL,CAAgB,CAAC;AAACD,QAAAA,CAAC,EAAE,CAAJ;AAAOE,QAAAA,CAAC,EAAE,CAAV;AAAaC,QAAAA,CAAC,EAAE;AAAhB,OAAD,CAAhB,EAAsCtC,MAAM,CAACyB,IAA7C,CAAf;;AAEA/B,MAAAA,WAAW,CACRgC,SADH,CACa,KAAKrC,aADlB,EAEGkD,MAFH,CAEUhB,MAAM,CAAC,CAAD,CAFhB,EAEqBU,MAFrB,EAGGL,KAHH,CAGS;AAAChB,QAAAA,UAAU,EAAE,KAAKkB,QAAL,CAAc9B,MAAd;AAAb,OAHT,EAIG+B,EAJH,CAIM,KAAKC,YAAL,CAAkBhC,MAAlB,CAJN;AAKD;;;oCAEeA,M,EAAQN,W,EAAa;AACnCA,MAAAA,WAAW,CACRgC,SADH,CACa,KAAKpC,gBADlB,EAEGqC,QAFH,CAEY,KAAKS,UAAL,CAAgBpC,MAAM,CAACuB,MAAvB,EAA+BvB,MAAM,CAACyB,IAAtC,CAFZ,EAGGG,KAHH,CAGS;AAACC,QAAAA,YAAY,EAAE,KAAKC,QAAL,CAAc9B,MAAd;AAAf,OAHT,EAIG+B,EAJH,CAIM,KAAKC,YAAL,CAAkBhC,MAAlB,CAJN;AAKD;;;mCAEcA,M,EAAQN,W,EAAa;AAAA;;AAClC,UAAM8C,KAAK,GAAGpB,mBAAEqB,KAAF,CAAQzC,MAAM,CAACuB,MAAf,EAAuB,CAAvB,CAAd;;AACAiB,MAAAA,KAAK,CAACzC,OAAN,CAAc,UAAC2C,IAAD,EAAOC,KAAP,EAAiB;AAC7BjD,QAAAA,WAAW,CACRgC,SADH,CACa,MAAI,CAACnC,eADlB,EAEGoC,QAFH,CAEY,MAAI,CAACS,UAAL,CAAgBM,IAAhB,EAAsB1C,MAAM,CAACyB,IAA7B,CAFZ,EAGGG,KAHH,CAGS;AAACC,UAAAA,YAAY,EAAE,MAAI,CAACC,QAAL,CAAc9B,MAAd;AAAf,SAHT,EAIG+B,EAJH,CAIM,CAAC,MAAI,CAACC,YAAL,CAAkBhC,MAAlB,CAAD,EAA4B2C,KAA5B,EAAmCvD,IAAnC,CAAwCP,mBAAxC,CAJN;AAKD,OAND;AAOD;;;+BAEUmB,M,EAAQN,W,EAAa;AAC9B,UAAM6B,MAAM,GAAG,KAAKa,UAAL,CACb,CACE;AAACD,QAAAA,CAAC,EAAE,CAAJ;AAAOE,QAAAA,CAAC,EAAE,CAAV;AAAaC,QAAAA,CAAC,EAAE;AAAhB,OADF,CACqB;AADrB,OADa,EAIbtC,MAAM,CAACyB,IAJM,CAAf;;AAOA/B,MAAAA,WAAW,CACRgC,SADH,CACa,KAAKlC,WADlB,EAEGoD,QAFH,CAEYrB,MAAM,CAAC,CAAD,CAFlB,EAGGsB,IAHH,CAGQ7C,MAAM,CAAC6C,IAHf;AAID;;;6BAEQ7C,M,EAAQ;AACf,UAAM8C,KAAK,GAAG9C,MAAM,CAAC8C,KAAP,IAAgB,CAAC9C,MAAM,CAAC+C,MAAP,IAAiB,EAAlB,EAAsB,CAAtB,CAA9B;;AACA,UAAID,KAAJ,EAAW;AACT,eAAO,CAACA,KAAK,CAACE,CAAP,EAAUF,KAAK,CAACG,CAAhB,EAAmBH,KAAK,CAACI,CAAzB,EAA4BJ,KAAK,CAACK,CAAlC,EAAqCC,GAArC,CAAyC,UAAAC,CAAC;AAAA,iBAAIC,IAAI,CAACC,KAAL,CAAWF,CAAC,GAAG,GAAf,CAAJ;AAAA,SAA1C,CAAP;AACD;;AAED,aAAO,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAP,CANe,CAMc;AAC9B;;;+BAEU9B,M,EAAQE,I,EAAM;AACvB,UAAM+B,MAAM,GAAG,IAAIC,aAAJ,CAAY,CAAChC,IAAI,CAACmB,QAAL,CAAcT,CAAf,EAAkBV,IAAI,CAACmB,QAAL,CAAcP,CAAhC,EAAmC,CAAnC,CAAZ,CAAf;AAEA,aAAOd,MAAM,CAAC6B,GAAP,CAAW,UAAAM,CAAC,EAAI;AACrBA,QAAAA,CAAC,GAAG,CAACA,CAAC,CAACvB,CAAH,EAAMuB,CAAC,CAACrB,CAAR,EAAW,CAAX,CAAJ;AACA,eAAOmB,MAAM,CACVG,KADI,GAEJC,GAFI,CAEAF,CAFA,EAGJG,OAHI,EAAP;AAID,OANM,CAAP;AAOD;;;gCAEWH,C,EAAG;AACb,UAAML,CAAC,GAAG,CAACK,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,IAAUA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAX,EAAoBA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,IAAUA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAA9B,EAAuCA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,IAAUA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAjD,CAAV;AACA,aAAOL,CAAP;AACD;;;+BAEUS,I,EAAMC,M,EAAQ;AACvB,UAAMV,CAAC,GAAG,CAACS,IAAI,CAAC,CAAD,CAAJ,GAAUC,MAAM,CAAC,CAAD,CAAjB,EAAsBD,IAAI,CAAC,CAAD,CAAJ,GAAUC,MAAM,CAAC,CAAD,CAAtC,EAA2CD,IAAI,CAAC,CAAD,CAAJ,GAAUC,MAAM,CAAC,CAAD,CAA3D,CAAV;AACA,aAAOV,CAAP;AACD;;;+BAEU9B,M,EAAQE,I,EAAM;AACvB,UAAMiC,CAAC,GAAG,KAAKtB,UAAL,CAAgBb,MAAhB,EAAwBE,IAAxB,CAAV,CADuB,CAGvB;;;AACA,UAAMuC,IAAI,GAAG,IAAIP,aAAJ,CAAY,KAAKQ,WAAL,CAAiB,CAACP,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,CAAjB,CAAZ,CAAb;AAEA,UAAMQ,SAAS,GAAGF,IAAI,CAACL,KAAL,GAAazB,KAAb,CAAmB,GAAnB,CAAlB;;AACA,UAAMiC,MAAM,GAAG,KAAKC,UAAL,CAAgBV,CAAC,CAAC,CAAD,CAAjB,EAAsBQ,SAAS,CAACL,OAAV,EAAtB,CAAf;;AAEAG,MAAAA,IAAI,CAAC9B,KAAL,CAAW,GAAX;AACA,UAAMmC,IAAI,GAAGL,IAAI,CAACL,KAAL,EAAb;;AAEA,UAAMW,MAAM,GAAG,KAAKF,UAAL,CAAgBV,CAAC,CAAC,CAAD,CAAjB,EAAsBW,IAAI,CAACE,OAAL,CAAa;AAACC,QAAAA,OAAO,EAAE,CAAClB,IAAI,CAACmB,EAAN,GAAW;AAArB,OAAb,EAAsCZ,OAAtC,EAAtB,CAAf;;AACA,UAAMa,OAAO,GAAG,KAAKN,UAAL,CAAgBV,CAAC,CAAC,CAAD,CAAjB,EAAsBM,IAAI,CAACO,OAAL,CAAa;AAACC,QAAAA,OAAO,EAAElB,IAAI,CAACmB,EAAL,GAAU;AAApB,OAAb,EAAqCZ,OAArC,EAAtB,CAAhB;;AAEAH,MAAAA,CAAC,CAACiB,IAAF,CAAOjB,CAAC,CAAC,CAAD,CAAR;AAEA,aAAO,CAACA,CAAC,CAAC,CAAD,CAAF,EAAOS,MAAP,EAAeG,MAAf,EAAuBZ,CAAC,CAAC,CAAD,CAAxB,EAA6BgB,OAA7B,EAAsCP,MAAtC,CAAP;AACD;;;mCAEcnE,M,EAAQ;AACrB,UAAM4E,QAAQ,GAAG,KAAK5C,YAAL,CAAkBhC,MAAlB,CAAjB;;AAEA,UAAIA,MAAM,CAAC6E,MAAP,KAAkBnG,UAAtB,EAAkC;AAChC;AACA;AACA;AACA,YAAI,KAAKM,YAAL,CAAkBgB,MAAlB,CAAJ,EAA+B;AAC7B,eAAKf,UAAL,CAAgB2F,QAAhB,IAA4B5E,MAA5B;AACD;AACF,OAPD,MAOO,IAAIA,MAAM,CAAC6E,MAAP,KAAkBlG,aAAtB,EAAqC;AAC1C,YAAI,CAACqB,MAAM,CAAC8E,EAAZ,EAAgB;AACd,eAAK7F,UAAL,GAAkB,EAAlB;AACD,SAFD,MAEO;AACL,eAAKA,UAAL,GAAkBmC,mBAAE2D,MAAF,CAAS,KAAK9F,UAAd,EAA0B,UAAC+F,KAAD,EAAQC,GAAR,EAAgB;AAC1D;AACA,mBAAO,CAACA,GAAG,CAACC,UAAJ,CAAeN,QAAf,CAAR;AACD,WAHiB,CAAlB;AAID;AACF,OATM,MASA,IAAI5E,MAAM,CAAC6E,MAAP,KAAkBjG,iBAAtB,EAAyC;AAC9C,aAAKK,UAAL,GAAkB,EAAlB;AACD;AACF;;;iCAEYe,M,EAAQ;AACnB,aAAO,CAACA,MAAM,CAAC8E,EAAR,EAAY9E,MAAM,CAAC+B,EAAnB,EAAuB3C,IAAvB,CAA4BP,mBAA5B,CAAP;AACD;;;wBApOiB;AAChB,aAAO,0BAAP;AACD;;;wBAEwB;AACvB,aAAO,gCAAP;AACD;;;;EArB2CsG,qB",
      "sourceRoot": "/home/ekin/Desktop/xviz/examples/converters/ros-ekin/messages/",
      "sourcesContent": [
        "// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* eslint-disable camelcase, no-invalid-this */\nimport Converter from './converter';\nimport _ from 'lodash';\nimport {Vector3} from 'math.gl';\n\nconst ACTION_ADD = 0;\nconst ACTION_DELETE = 2;\nconst ACTION_DELETE_ALL = 3;\n\nconst NAMESPACE_SEPARATOR = '/';\n\n/**\n * Handles converting MarkerArray messages\n */\nexport class VisualizationMarkerArray extends Converter {\n  constructor(config) {\n    // acceptMarker /* Function to filter the markers to use (if not defined, uses all markers) */\n    super(config);\n    this.acceptMarker = this.config.acceptMarker || (() => true);\n\n    this.markersMap = {};\n\n    this.ARROW_STREAM = [this.xvizStream, 'arrow'].join(NAMESPACE_SEPARATOR);\n    this.SPHERE_STREAM = [this.xvizStream, 'sphere'].join(NAMESPACE_SEPARATOR);\n    this.LINESTRIP_STREAM = [this.xvizStream, 'linestrip'].join(NAMESPACE_SEPARATOR);\n    this.LINELIST_STREAM = [this.xvizStream, 'linelist'].join(NAMESPACE_SEPARATOR);\n    this.TEXT_STREAM = [this.xvizStream, 'text'].join(NAMESPACE_SEPARATOR);\n  }\n\n  static get name() {\n    return 'VisualizationMarkerArray';\n  }\n\n  static get messageType() {\n    return 'visualization_msgs/MarkerArray';\n  }\n\n  convertMessage(frame, xvizBuilder) {\n    const messages = frame[this.topic];\n    if (messages) {\n      for (const {message} of messages) {\n        message.markers.forEach(marker => this._processMarker(marker));\n      }\n    }\n\n    this.writeMarkers(xvizBuilder);\n  }\n\n  getMetadata(xvizMetaBuilder) {\n    xvizMetaBuilder\n      .stream(this.ARROW_STREAM)\n      .coordinate('IDENTITY')\n      .category('primitive')\n      .type('polyline')\n\n      .stream(this.LINESTRIP_STREAM)\n      .coordinate('IDENTITY')\n      .category('primitive')\n      .type('polyline')\n      .streamStyle({\n        stroke_width: 0.2,\n        stroke_width_min_pixels: 1\n      })\n\n      .stream(this.LINELIST_STREAM)\n      .coordinate('IDENTITY')\n      .category('primitive')\n      .type('polyline')\n      .streamStyle({\n        stroke_width: 0.2,\n        stroke_width_min_pixels: 1\n      })\n\n      .stream(this.SPHERE_STREAM)\n      .coordinate('IDENTITY')\n      .category('primitive')\n      .type('circle')\n      .streamStyle({\n        stroke_width: 0.2\n      })\n\n      .stream(this.TEXT_STREAM)\n      .category('primitive')\n      .type('text')\n      .streamStyle({\n        size: 18,\n        fill_color: '#0000FF'\n      });\n  }\n\n  writeMarkers(xvizBuilder) {\n    /* Unimplemented markers\n    uint8 CUBE=1\n    uint8 CYLINDER=3\n    uint8 CUBE_LIST=6\n    uint8 SPHERE_LIST=7\n    uint8 POINTS=8\n    uint8 MESH_RESOURCE=10\n    uint8 TRIANGLE_LIST=11\n    */\n\n    const WRITERS = {\n      '0': this._writeArrow.bind(this),\n      '2': this._writeSphere.bind(this),\n      '4': this._writeLineStrip.bind(this),\n      '5': this._writeLineList.bind(this),\n      '9': this._writeText.bind(this)\n    };\n\n    /*\n    const writerName = {\n      '0': 'Arrow',\n      '2': 'Sphere',\n      '4': 'LineStrip',\n      '5': 'LineList',\n      '9': 'Text'\n    };\n    */\n\n    _.forOwn(this.markersMap, marker => {\n      const writer = WRITERS[marker.type];\n      if (writer) {\n        writer(marker, xvizBuilder);\n      }\n    });\n  }\n\n  _writeArrow(marker, xvizBuilder) {\n    const points = this._makeArrow(marker.points, marker.pose);\n    xvizBuilder\n      .primitive(this.ARROW_STREAM)\n      .polyline(points)\n      .style({stroke_color: this._toColor(marker)})\n      .id(this._getMarkerId(marker));\n  }\n\n  _writeSphere(marker, xvizBuilder) {\n    const RADIUS = marker.scale.x / 2;\n    const points = this._mapPoints([{x: 0, y: 0, z: 0}], marker.pose);\n\n    xvizBuilder\n      .primitive(this.SPHERE_STREAM)\n      .circle(points[0], RADIUS)\n      .style({fill_color: this._toColor(marker)})\n      .id(this._getMarkerId(marker));\n  }\n\n  _writeLineStrip(marker, xvizBuilder) {\n    xvizBuilder\n      .primitive(this.LINESTRIP_STREAM)\n      .polyline(this._mapPoints(marker.points, marker.pose))\n      .style({stroke_color: this._toColor(marker)})\n      .id(this._getMarkerId(marker));\n  }\n\n  _writeLineList(marker, xvizBuilder) {\n    const lines = _.chunk(marker.points, 2);\n    lines.forEach((line, index) => {\n      xvizBuilder\n        .primitive(this.LINELIST_STREAM)\n        .polyline(this._mapPoints(line, marker.pose))\n        .style({stroke_color: this._toColor(marker)})\n        .id([this._getMarkerId(marker), index].join(NAMESPACE_SEPARATOR));\n    });\n  }\n\n  _writeText(marker, xvizBuilder) {\n    const points = this._mapPoints(\n      [\n        {x: 0, y: 0, z: 2} // z=2 to float above\n      ],\n      marker.pose\n    );\n\n    xvizBuilder\n      .primitive(this.TEXT_STREAM)\n      .position(points[0])\n      .text(marker.text);\n  }\n\n  _toColor(marker) {\n    const color = marker.color || (marker.colors || [])[0];\n    if (color) {\n      return [color.r, color.g, color.b, color.a].map(v => Math.round(v * 255));\n    }\n\n    return [128, 128, 128, 255]; // default color\n  }\n\n  _mapPoints(points, pose) {\n    const origin = new Vector3([pose.position.x, pose.position.y, 0]);\n\n    return points.map(p => {\n      p = [p.x, p.y, 0];\n      return origin\n        .clone()\n        .add(p)\n        .toArray();\n    });\n  }\n\n  _makeVector(p) {\n    const v = [p[1][0] - p[0][0], p[1][1] - p[0][1], p[1][2] - p[0][2]];\n    return v;\n  }\n\n  _makePoint(base, vector) {\n    const v = [base[0] + vector[0], base[1] + vector[1], base[2] + vector[2]];\n    return v;\n  }\n\n  _makeArrow(points, pose) {\n    const p = this._mapPoints(points, pose);\n\n    // vector pointing to starting point\n    const vecA = new Vector3(this._makeVector([p[1], p[0]]));\n\n    const pCrossVec = vecA.clone().scale(0.3);\n    const pCross = this._makePoint(p[1], pCrossVec.toArray());\n\n    vecA.scale(0.5);\n    const vecB = vecA.clone();\n\n    const leftPt = this._makePoint(p[1], vecB.rotateZ({radians: -Math.PI / 4}).toArray());\n    const rightPt = this._makePoint(p[1], vecA.rotateZ({radians: Math.PI / 4}).toArray());\n\n    p.push(p[1]);\n\n    return [p[0], pCross, leftPt, p[1], rightPt, pCross];\n  }\n\n  _processMarker(marker) {\n    const markerId = this._getMarkerId(marker);\n\n    if (marker.action === ACTION_ADD) {\n      // We only run the acceptMarker filter for ADD because we want to avoid accidentally filtering\n      // out DELETE messages. It's safe to process all DELETE messages because worse case they're just a noop\n      // if they don't apply\n      if (this.acceptMarker(marker)) {\n        this.markersMap[markerId] = marker;\n      }\n    } else if (marker.action === ACTION_DELETE) {\n      if (!marker.ns) {\n        this.markersMap = {};\n      } else {\n        this.markersMap = _.pickBy(this.markersMap, (value, key) => {\n          // Using `startsWith` to support removing entire namespaces when an id isn't specified\n          return !key.startsWith(markerId);\n        });\n      }\n    } else if (marker.action === ACTION_DELETE_ALL) {\n      this.markersMap = {};\n    }\n  }\n\n  _getMarkerId(marker) {\n    return [marker.ns, marker.id].join(NAMESPACE_SEPARATOR);\n  }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1594096596598
  }
}